source("/Users/bomin8319/Desktop/MulticastNetwork/code/Multicast.R")
library(lubridate)#
load('~/Desktop/MulticastNetwork/code/Temporal_Email_Data.Rdata')#
Montgomery = Temporal_Email_Data$Montgomery#
email = Montgomery$email_data#
email = unique(email)#
email$timepoints =  as.numeric(as.POSIXct(strptime(email[,1], "%d %b %Y %H:%M:%S")))#
email = email[order(email$timepoints), ]#
edge = list()#
initialtime =  as.numeric(as.POSIXct(strptime("01 Mar 2012 00:00:00", "%d %b %Y %H:%M:%S")))#
for (d in 1:nrow(email)) {#
	t_d = email[d, 21] - initialtime#
	edge[[d]] = list(a_d = email[d,2], r_d = as.numeric(email[d,-c(1:2, 21)]), t_d = t_d)#
}#
A = length(Montgomery$manager_gender)#
#
#observed statistics#
timeunit = 3600#
trim = which(email$timepoints >=3*24*timeunit+email$timepoints[1])#
#
indegree = tabulate(email[trim,2], A)#
outdegree = colSums(email[trim,3:20])#
recipients = tabulate(rowSums(email[trim,3:20]), A-1)#
timeinc = diff(email$timepoints[21:max(trim)])#
#
indegreedist = matrix(NA, 50, A)#
outdegreedist = matrix(NA, 50, A)#
recipientsdist = matrix(NA, 50, A-1)#
setwd("/Users/bomin8319/Desktop/MulticastNetwork/code")#
for (n in 1:71) {#
	filename = paste0("Montgomery_PPC", n,".RData")#
	load(filename)#
	indegreedist[n, ] = tabulate(vapply(1:642, function(x) Montgomery_PPC[[x]]$a_d, c(1)), A)#
	outdegreedist[n, ] = rowSums(sapply(1:642, function(x) Montgomery_PPC[[x]]$r_d))#
	recipientsdist[n, ] = tabulate(vapply(1:642, function(x) sum(Montgomery_PPC[[x]]$r_d), c(1)), A-1)#
}
x
names(Montgomery_PPC[[1]])
dim(Montgomery_PPC[[1]])
head(Montgomery_PPC)
length(Montgomery_PPC[[1]])
Montgomery_PPC
for (n in 1:71) {#
	filename = paste0("Montgomery_PPC", n,".RData")#
	load(filename)#
	indegreedist[n, ] = tabulate(vapply(1:621, function(x) Montgomery_PPC[[x]]$a_d, c(1)), A)#
	outdegreedist[n, ] = rowSums(sapply(1:621, function(x) Montgomery_PPC[[x]]$r_d))#
	recipientsdist[n, ] = tabulate(vapply(1:621, function(x) sum(Montgomery_PPC[[x]]$r_d), c(1)), A-1)#
}
A
n
indegreedist
indegreedist = matrix(NA, 71, A)#
outdegreedist = matrix(NA, 71, A)#
recipientsdist = matrix(NA, 71, A-1)#
setwd("/Users/bomin8319/Desktop/MulticastNetwork/code")#
for (n in 1:71) {#
	filename = paste0("Montgomery_PPC", n,".RData")#
	load(filename)#
	indegreedist[n, ] = tabulate(vapply(1:621, function(x) Montgomery_PPC[[x]]$a_d, c(1)), A)#
	outdegreedist[n, ] = rowSums(sapply(1:621, function(x) Montgomery_PPC[[x]]$r_d))#
	recipientsdist[n, ] = tabulate(vapply(1:621, function(x) sum(Montgomery_PPC[[x]]$r_d), c(1)), A-1)#
}
par(mfrow = c(3,1))#
#
boxplot(indegreedist)#
lines(indegree, col = 2)#
#
boxplot(outdegreedist)#
lines(outdegree, col = 2)#
#
boxplot(recipientsdist)#
lines(recipients, col = 2)
indegreedist
tabulte(indegreedist)
tabulate(indegreedist)
summary(indegreedist)
summary(c(indegreedist))
boxplot(recipientsdist)
lines(recipients, col = 2)
recipientsdist
recipients
boxplot(recipientsdist)#
lines(recipients, col = 2)
indegree = rep(0, 3)
timeunit = 3600#
trim = which(email$timepoints >=7*24*timeunit+email$timepoints[1])#
#
indegree = tabulate(email[trim,2], A)#
outdegree = colSums(email[trim,3:20])#
recipients = tabulate(rowSums(email[trim,3:20]), A-1)#
timeinc = diff(email$timepoints[21:max(trim)])#
indegreedist = matrix(NA, 71, A)#
outdegreedist = matrix(NA, 71, A)#
recipientsdist = matrix(NA, 71, A-1)#
setwd("/Users/bomin8319/Desktop/MulticastNetwork/code")#
for (n in 1:71) {#
	filename = paste0("Montgomery_PPC", n,".RData")#
	load(filename)#
	indegreedist[n, ] = tabulate(vapply(1:621, function(x) Montgomery_PPC[[x]]$a_d, c(1)), A)#
	outdegreedist[n, ] = rowSums(sapply(1:621, function(x) Montgomery_PPC[[x]]$r_d))#
	recipientsdist[n, ] = tabulate(vapply(1:621, function(x) sum(Montgomery_PPC[[x]]$r_d), c(1)), A-1)#
} #
#
par(mfrow = c(3,1))
boxplot(indegreedist)#
lines(indegree, col = 2)#
#
boxplot(outdegreedist)#
lines(outdegree, col = 2)#
#
boxplot(recipientsdist)#
lines(recipients, col = 2)
boxplot(recipientsdist)#
lines(recipients, col = 2)
recipients
sum(recipients)
trim
max(trim)
timeinc = diff(email$timepoints[43:max(trim)])
timeinc
length(timeinc)
timeinc = diff(email$timepoints[42:max(trim)])
indegreesum = rep(0, 3)
table(c(indegreedist))
indegreesum = table(floor(c(indegreedist))/10 +1)
indegreesum
indegreesum = table(floor(c(indegreedist)/10) +1)
indegreesum
indegreesum = table(floor(c(indegreedist)/10))
indegreesum
boxplot(indegreesum)
indegreesum = table(floor(indegreedist/10))
indegreesum
indegreedist/10
floor(indegreedist/10)
boxplot(floor(indegreedist/10))
boxplot(recipientsdist)
lines(recipients, col = 2)
boxplot(indegreedist)#
lines(indegree, col = 2)
indegree
boxplot(indegreedist)
boxplot(outdegreedist)
lines(outdegree, col = 2)
boxplot(indegreedist)
lines(indegree, col = 2)
indegree
sum(indegree)
indegree = tabulate(email[trim,2], A)
email
indegreedist = matrix(NA, 71, A)#
outdegreedist = matrix(NA, 71, A)#
recipientsdist = matrix(NA, 71, A-1)#
setwd("/Users/bomin8319/Desktop/MulticastNetwork/code")#
for (n in 1:71) {#
	filename = paste0("Montgomery_PPC", n,".RData")#
	load(filename)#
	outdegreedist[n, ] = tabulate(vapply(1:621, function(x) Montgomery_PPC[[x]]$a_d, c(1)), A)#
	indegreedist[n, ] = rowSums(sapply(1:621, function(x) Montgomery_PPC[[x]]$r_d))#
	recipientsdist[n, ] = tabulate(vapply(1:621, function(x) sum(Montgomery_PPC[[x]]$r_d), c(1)), A-1)#
}
boxplot(indegreedist)#
lines(indegree, col = 2)
boxplot(outdegreedist)#
lines(outdegree, col = 2)
boxplot(indegreedist)#
lines(indegree, col = 2)
indegree
sum(indegree)
boxplot(outdegreedist)#
lines(outdegree, col = 2)
boxplot(recipientsdist)#
lines(recipients, col = 2)
diff(vapply(1:621, function(x) sum(Montgomery_PPC[[x]]$t_d), c(1)))
Montgomery_PPC[[x]]$t_d
vapply(1:621, function(x) sum(Montgomery_PPC[[x]]$t_d), c(1))
diff(vapply(1:621, function(x) sum(Montgomery_PPC[[x]]$t_d), c(1)))
email$timepoints[42]
c(email$timepoints[42], diff(vapply(1:621, function(x) sum(Montgomery_PPC[[x]]$t_d), c(1)))) / timeunit
indegreedist = matrix(NA, 71, A)#
outdegreedist = matrix(NA, 71, A)#
recipientsdist = matrix(NA, 71, A-1)#
timedist = matrix(NA, 71, 621)#
setwd("/Users/bomin8319/Desktop/MulticastNetwork/code")#
for (n in 1:71) {#
	filename = paste0("Montgomery_PPC", n,".RData")#
	load(filename)#
	outdegreedist[n, ] = tabulate(vapply(1:621, function(x) Montgomery_PPC[[x]]$a_d, c(1)), A)#
	indegreedist[n, ] = rowSums(sapply(1:621, function(x) Montgomery_PPC[[x]]$r_d))#
	recipientsdist[n, ] = tabulate(vapply(1:621, function(x) sum(Montgomery_PPC[[x]]$r_d), c(1)), A-1)#
	timedist[n, ] = c(email$timepoints[42], diff(vapply(1:621, function(x) sum(Montgomery_PPC[[x]]$t_d), c(1)))) / timeunit#
}
boxplot(timedist)
plot(timedist)
head(timedist)
plot(c(timedist[,-1]), timeinc[-1])
qqplot(c(timedist[,-1]), timeinc[-1])
timeinc[-1]
timeinc = diff(email$timepoints[42:max(trim)])
timeinc
email$timepoints =  as.numeric(as.POSIXct(strptime(email[,1], "%d %b %Y %H:%M:%S")))
email$timepoints
n
timeinc = diff(sort(email$timepoints)[42:max(trim)])
timeinc
source("/Users/bomin8319/Desktop/MulticastNetwork/code/Multicast.R")#
library(lubridate)#
load('~/Desktop/MulticastNetwork/code/Temporal_Email_Data.Rdata')#
Montgomery = Temporal_Email_Data$Montgomery#
email = Montgomery$email_data#
email = unique(email)#
email$timepoints =  as.numeric(as.POSIXct(strptime(email[,1], "%d %b %Y %H:%M:%S")))#
email = email[order(email$timepoints), ]#
edge = list()#
initialtime =  as.numeric(as.POSIXct(strptime("01 Mar 2012 00:00:00", "%d %b %Y %H:%M:%S")))#
for (d in 1:nrow(email)) {#
	t_d = email[d, 21] - initialtime#
	edge[[d]] = list(a_d = email[d,2], r_d = as.numeric(email[d,-c(1:2, 21)]), t_d = t_d)#
}#
A = length(Montgomery$manager_gender)
email$timepoints
sort(email$timepoints)
timeinc = diff(sort(email$timepoints)[42:max(trim)])
timeinc
timeinc = diff(sort(email$timepoints)[42:max(trim)])/3600
timeinc
qqplot(c(timedist[,-1]), timeinc[-1])
timeinc
length(timeinc)
timeinc = diff(sort(email$timepoints)[43:max(trim)])/3600
qqplot(c(timedist[,-1]), timeinc)
abline(0, 1, col = 2)
GiR_PP_Plots(c(timedist[,-1]), timeinc)
library(quanlityTools)
library(CircStats)
pp.plot(c(timedist[,-1]))
c(timedist[,-1])
timedist[,-1]
hist(timedist[,2])
boxplot(timedist[,1])
boxplot(timedist[,-1])
lines(timeinc, col = 2)
boxplot(timedist[,-1], ylim = c(0, 1000))
lines(timeinc, col = 2)
timeinc
plot(timeinc)
boxplot(timedist[,-1], ylim = c(0, 1000))#
lines(timeinc, col = 2)
boxplot(timedist[,-1], ylim = c(0, 100))#
lines(timeinc, col = 2)
boxplot(timedist[,-1], ylim = c(0, 80))
lines(timeinc, col = 2)
Montgomery_PPC[[1]]
boxplot(outdegreedist)#
lines(outdegree, col = 2)
outdegree
boxplot(outdegreedist, ylim = c(0, 200))#
lines(outdegree, col = 2)
boxplot(outdegreedist, ylim = c(0, 300))#
lines(outdegree, col = 2)
node
Montgomery$manager_gender
Montgomery$manager_department
boxplot(outdegreedist, ylim = c(0, 275))
lines(outdegree, col = 2)
boxplot(outdegreedist, ylim = c(0, 275), main = "outdegree")#
lines(outdegree, col = 2)
boxplot(indegreedist)#
lines(indegree, col = 2)
indegree
boxplot(indegreedist)
boxplot(indegreedist, main = "indegree")#
lines(indegree, col = 2, ylim = c(0, 200))
boxplot(indegreedist,ylim = c(0, 200),  main = "indegree")
lines(indegree, col = 2)
boxplot(indegreedist,ylim = c(0, 170),  main = "indegree")
lines(indegree, col = 2)
boxplot(recipientsdist)#
lines(recipients, col = 2)
recipients
boxplot(recipientsdist, ylim = c(0, 515),  main = "receiver size")#
lines(recipients, col = 2)
head(timedist)
uniqueValues = quantile(c(timedist[,-1], timeinc), seq(0, 1, length = 1000))
uniqueValues
qx1 = numeric(length(uniqueValues))#
  	qx2 = numeric(length(uniqueValues))#
  	for (j in 1:length(uniqueValues)) {#
  		qx1[j] = mean(c(timedist[,-1]) <= uniqueValues[j])#
  		qx2[j] = mean(c(timeinc) <= uniqueValues[j])#
  	}
qqplot(x = qx1,#
           y = qx2,#
           ylim = c(0, 1),#
           xlim = c(0, 1),#
           ylab = "Backward",#
           xlab = "Forward",#
           col = "blue",#
           pch = 19,#
           cex = 0.25,#
           main = nms[i],#
           cex.lab = 0.25,#
           cex.axis = 0.25,#
           cex.main = 0.5)#
    abline(0, 1, lty = 1, col = "red", lwd = 1)
qqplot(c(timedist[,-1]), timeinc)
hi = quantile(c(timedist[,-1]), c(.05, .95 ))
qqplot(hi, timeinc)
hi
qqplot(c(timedist[,-1])[c(timedist[,-1])>=hi[1] & c(timedist[,-1])<=hi[2]], timeinc)
abline(0, 1, col = 2)
qqplot(c(timedist[,-1])[c(timedist[,-1])>=hi[1] & c(timedist[,-1])<=hi[2]], timeinc, xlab = "post", ylab = "obs")
abline(0, 1, col = 2)
uniqueValues = quantile(c(timedist[,-1], timeinc), seq(0, 1, length = 1000))#
  qx1 = numeric(length(uniqueValues))#
  	qx2 = numeric(length(uniqueValues))#
  	for (j in 1:length(uniqueValues)) {#
  		qx1[j] = mean(c(timedist[,-1]) <= uniqueValues[j])#
  		qx2[j] = mean(c(timeinc) <= uniqueValues[j])#
  	}
qqplot(x = qx1,#
           y = qx2,#
           ylim = c(0, 1),#
           xlim = c(0, 1),#
           ylab = "Backward",#
           xlab = "Forward",#
           col = "blue",#
           pch = 19,#
           cex = 0.25,#
           main = nms[i],#
           cex.lab = 0.25,#
           cex.axis = 0.25,#
           cex.main = 0.5)#
    abline(0, 1, lty = 1, col = "red", lwd = 1)
hi = quantile(c(timedist[,-1]), c(.05, .95 ))#
qqplot(c(timedist[,-1])[c(timedist[,-1])>=hi[1] & c(timedist[,-1])<=hi[2]], timeinc, xlab = "post", ylab = "obs")#
abline(0, 1, col = 2)
hi = quantile(c(timedist[,-1]), c(.05, .95 ))#
qqplot(c(timedist[,-1])[c(timedist[,-1])>=hi[1] & c(timedist[,-1])<=hi[2]], timeinc, xlab = "post", ylab = "obs", main = "timeinc")#
abline(0, 1, col = 2)
# Generative process#
library(combinat)#
library(mvtnorm)#
library(MCMCpack)#
library(Rcpp)#
library(lubridate)#
sourceCpp('/Users/bomin8319/Desktop/MulticastNetwork/code/Multicast_rcpp.cpp')
