{
    "collab_server" : "",
    "contents" : "dept = dept_reduced\nnode = node_reduced\n\nA = nrow(node)\ndata = matrix(dept[,1:3], ncol = 3)\ntry = PPLSM_infer_dist(data, node, 0, diag(4), 0.001, 0.001, 55000, c(5,5), 5000, NULL)\n\ninitial = list()\ninitial$beta = colMeans(try$beta)\ntry2 = PPLSM_infer_dist(data, node, 2, diag(4), 0.0005, 0.005, 55000, c(5,5), 5000, initial = initial)\n\n\nhist = list()\nnetstat = list()\nelement = which(upper.tri(diag(A))==1)\niter = 1\nE = nrow(data)\ntrimE = c((which_num(13, data[,3])+1):E)\nuniqtime = unique(data[trimE,3])\nfor (time in uniqtime) {\n\t d = min(which(dept[,3] == time))\n \t indicator = Indicator(data, A, d)\n\t recency = Recency(data, A, d)\n\t netstat[[iter]] = cbind(indicator[element], recency[element])\n\t iter = iter+1\n }\nindexes = c()\nfor (d in trimE) {\n\tintmat = matrix(0, A, A)\n\tintmat[data[d,1], data[d,2]] = 1\n\tindexes[d] = which(element==which(intmat==1))\n}\nbeta = rnorm(2)\nloglike_cpp(netstat[trimE], beta, rep(0, length(element)), indexes[trimE])\n\n\ntry = PPLSM_infer_dist(data, node, 0, diag(4), 0.001, 0.001, 22000, c(1,1), 2000, NULL)\n\n#simulation study\n\nNsamp = 5000\nresults = matrix(NA, nrow = Nsamp, ncol = 2)\n E = nrow(data)\n A = nrow(node)\ndata = matrix(dept[,1:3], ncol = 3)\n    element = which(upper.tri(diag(A))==1)\n    trimE = c((which_num(365, data[,3])+1):E)\n\tuniqtime = unique(data[trimE,3])\n\titer = 1\n\tnetstat = list()\n\tindexes = list()\n\tcases = list()\n\tcontrols = list()\n\ttotal = length(element)\n    college = matrix(0, A, A)\n    faculty = matrix(0, A, A)\n    for (a in 1:A) {\n        for (b in which((1:A)>a)) {\n            college[a, b] = as.numeric(node[a,4] == node[b,4])\n            faculty[a, b] = log(max(node[a,6], node[b,6]))\n        }\n    }\n    college = college[element]\n    faculty = faculty[element]\n    for (time in uniqtime) {\n\t\tdocs = which(data[,3] == time)\n\t\td = min(docs)\n \t \tindicator = Indicator(data, A, d)\n\t \trecency = Recency(data, A, d)\n\t \tnetstat[[iter]] = cbind(indicator[element], recency[element])\n\t \tindexes[[iter]] = rep(NA, length(docs))\n\t \tfor (i in 1:length(docs)) {\n\t \t\tintmat = matrix(0, A, A)\n\t\t\tintmat[data[docs[i],1], data[docs[i],2]] = 1\n\t\t\tindexes[[iter]][i] = which(element == which(intmat==1))\n\t\t\tcases[[iter]] = which(netstat[[iter]][,2] > 0)\n\t\t    controls[[iter]] = sample((1:total)[-cases[[iter]]], total/8-length(cases[[iter]]))\n\t \t}\n\t \titer = iter+1\n\t}\n\n\t#beta = rnorm(4)\n\t#Zdist = rnorm(A * (A-1) / 2)\n\tZdist = rep(0, A*(A-1) / 2)\nfor (n in 1:Nsamp) {\n\tbeta = rnorm(2)\n\tZdist = rnorm(A * (A-1) / 2)\n\tdocs = sample(1:length(netstat), 285)\n\tresults[n,1] = loglike_cpp(netstat[docs], beta, Zdist, indexes[docs])\n\tresults[n,2] = loglike_reduced(netstat[docs], beta, Zdist, indexes[docs], cases[docs], controls[docs])\n}\npar(mfrow=c(1,2))\nplot(results[,1], results[,2], xlab = \"full\", ylab = \"reduced\")\nabline(0, 1, col = 'red')\nplot(results[,1]-results[,2], ylab = \"full - reduced\")\nabline(h = 0, col = 'red')\n\n",
    "created" : 1521578342097.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "208604289",
    "id" : "689F0E0E",
    "lastKnownWriteTime" : 1521649414,
    "last_content_update" : 1521649414441,
    "path" : "~/Desktop/PointProcess/Untitled.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}