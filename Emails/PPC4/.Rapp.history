colnames(receiver)[1] = "prob"
ggplot(data = receiver, aes(x = dist, y = prob, fill = dist, group = true))+geom_boxplot()
ggplot(data = receiver, aes(x = dist, y = prob, fill = dist, group = true))+geom_boxplot()+position_dodge()
receiver = melt(receiver)
head(receiver)
tail(receiver)
receiver = data.frame(probtrue = probtrue0, dist = rep("lognormal", length(probtrue0)), true = rep(0, length(probtrue0)))#
receiver = rbind(receiver, data.frame(probtrue = probtrue20, dist = rep("exponential", length(probtrue0)), true = rep(0, length(probtrue0))))#
receiver = rbind(receiver, data.frame(probtrue = probtrue1, dist = rep("lognormal", length(probtrue1)), true = rep(1, length(probtrue1))))#
receiver = rbind(receiver, data.frame(probtrue = probtrue21, dist = rep("exponential", length(probtrue1)), true = rep(1, length(probtrue21))))#
receiver = melt(receiver)
head(receiver)
tail(receiver)
colnames(receiver)[3] = "prob"#
ggplot(data = receiver, aes(x = dist, y = prob, fill = dist, group = true))+geom_boxplot()+position_dodge()
ggplot(data = receiver, aes(x = dist, y = prob, fill = dist, group = true))+geom_boxplot()
receiver = data.frame(probtrue = probtrue0, dist = rep("lognormal", length(probtrue0)), true = rep(0, length(probtrue0)))#
receiver = rbind(receiver, data.frame(probtrue = probtrue20, dist = rep("exponential", length(probtrue0)), true = rep(0, length(probtrue0))))#
receiver = rbind(receiver, data.frame(probtrue = probtrue1, dist = rep("lognormal", length(probtrue1)), true = rep(1, length(probtrue1))))#
receiver = rbind(receiver, data.frame(probtrue = probtrue21, dist = rep("exponential", length(probtrue1)), true = rep(1, length(probtrue21))))
head(receiver)
receiver = melt(receiver)
head(receiver)
ggplot(data = receiver, aes(factor(variable), y = prob))+geom_boxplot(fill=dist)
head(receiver)
colnames(receiver)[3] = "prob"#
ggplot(data = receiver, aes(factor(variable), y = prob))+geom_boxplot(fill=dist)
factor(variable)
factor(reciever$variable)
factor(receiver$variable)
ggplot(data = receiver, aes(factor(variable), y = prob))+geom_boxplot(aes(fill=dist))
ggplot(data = receiver, aes(factor(variable), y = prob))+geom_boxplot(aes(fill=dist))+facet_wrap(~variables)
ggplot(data = receiver, aes(factor(variable), y = prob))+geom_boxplot(aes(fill=dist))+facet_wrap(~probtrue)
prob
ggplot(data = receiver, aes(factor(variable), y = prob))+geom_boxplot(aes(fill=dist))+facet_wrap(~true)
ggplot(data = receiver, aes(factor(variable), y = prob))+geom_boxplot(aes(fill=dist))+facet_wrap(~factor(variable),scales = "free")
probtrue1
probtrue0 = probtrue[truereceiver==0]#
probtrue20 = probtrue2[truereceiver==0]#
#
probtrue1 = probtrue[truereceiver==1]#
probtrue1=probtrue1[-which(probtrue1==0.999)]#
probtrue21 = probtrue2[truereceiver==1]#
probtrue21=probtrue21[-which(probtrue21==0.999)]#
#
receiver = data.frame(probtrue = probtrue0, dist = rep("lognormal", length(probtrue0)), true = rep(0, length(probtrue0)))#
receiver = rbind(receiver, data.frame(probtrue = probtrue20, dist = rep("exponential", length(probtrue0)), true = rep(0, length(probtrue0))))#
receiver = rbind(receiver, data.frame(probtrue = probtrue1, dist = rep("lognormal", length(probtrue1)), true = rep(1, length(probtrue1))))#
receiver = rbind(receiver, data.frame(probtrue = probtrue21, dist = rep("exponential", length(probtrue1)), true = rep(1, length(probtrue21))))#
receiver = melt(receiver)#
colnames(receiver)[3] = "prob"#
ggplot(data = receiver, aes(factor(variable), y = prob))+geom_boxplot(aes(fill=dist))+facet_wrap(~factor(variable),scales = "free")
probtrue1
probtrue1 = probtrue[truereceiver==1]#
probtrue1=probtrue1[-which(probtrue1==0.999)]
probtrue1
probtrue1 = probtrue[truereceiver==1]
which(probtrue1==0.999)
probtrue1
probtrue1==0.999
probtrue1=probtrue1[-which(probtrue1>0.99)]
probtrue1
probtrue1 = probtrue[truereceiver==1]#
probtrue1=probtrue1[-which(probtrue1>0.99)]#
probtrue21 = probtrue2[truereceiver==1]#
probtrue21=probtrue21[-which(probtrue21>0.99)]#
#
receiver = data.frame(probtrue = probtrue0, dist = rep("lognormal", length(probtrue0)), true = rep(0, length(probtrue0)))#
receiver = rbind(receiver, data.frame(probtrue = probtrue20, dist = rep("exponential", length(probtrue0)), true = rep(0, length(probtrue0))))#
receiver = rbind(receiver, data.frame(probtrue = probtrue1, dist = rep("lognormal", length(probtrue1)), true = rep(1, length(probtrue1))))#
receiver = rbind(receiver, data.frame(probtrue = probtrue21, dist = rep("exponential", length(probtrue1)), true = rep(1, length(probtrue21))))#
receiver = melt(receiver)#
colnames(receiver)[3] = "prob"#
ggplot(data = receiver, aes(factor(variable), y = prob))+geom_boxplot(aes(fill=dist))+facet_wrap(~factor(variable),scales = "free")
probtrue0 = probtrue[truereceiver==0]#
probtrue20 = probtrue2[truereceiver==0]#
#
probtrue1 = probtrue[truereceiver==1]#
probtrue1=probtrue1[-which(probtrue1>0.99)]#
probtrue21 = probtrue2[truereceiver==1]#
probtrue21=probtrue21[-which(probtrue21>0.99)]#
#
receiver = data.frame(probtrue = probtrue0, dist = rep("lognormal", length(probtrue0)), true = rep(0, length(probtrue0)))#
receiver = rbind(receiver, data.frame(probtrue = probtrue20, dist = rep("exponential", length(probtrue0)), true = rep(0, length(probtrue0))))#
receiver = rbind(receiver, data.frame(probtrue = probtrue1, dist = rep("lognormal", length(probtrue1)), true = rep(1, length(probtrue1))))#
receiver = rbind(receiver, data.frame(probtrue = probtrue21, dist = rep("exponential", length(probtrue1)), true = rep(1, length(probtrue21))))#
receiver = melt(receiver)#
colnames(receiver)[3] = "prob"#
ggplot(data = receiver, aes(factor(variable), y = prob))+geom_boxplot(aes(fill=dist))+facet_wrap(~factor(variable),scales = "free")
probtrue21
receiver = data.frame(probtrue = probtrue0, dist = rep("lognormal", length(probtrue0)), true = rep(0, length(probtrue0)))#
receiver = rbind(receiver, data.frame(probtrue = probtrue20, dist = rep("exponential", length(probtrue0)), true = rep(0, length(probtrue0))))#
receiver = rbind(receiver, data.frame(probtrue = probtrue1, dist = rep("lognormal", length(probtrue1)), true = rep(1, length(probtrue1))))#
receiver = rbind(receiver, data.frame(probtrue = probtrue21, dist = rep("exponential", length(probtrue1)), true = rep(1, length(probtrue21))))#
receiver = melt(receiver)#
colnames(receiver)[3] = "prob"#
ggplot(data = receiver, aes(factor(variable), y = prob))+geom_boxplot(aes(fill=dist))+facet_wrap(~factor(variable),scales = "free")
truetime = sapply(Montgomery_PPE$timemissing, function(d) edge[[d]]$t_d-edge[[d-1]]$t_d)/3600#
predtime = Montgomery_PPE$timepredict#
predtime2 = Montgomery_PPE2$timepredict#
#
time = data.frame(MdAPE = sapply(1:62, function(d) median(abs((predtime[d,]-truetime[d])/truetime[d]))), dist = rep("lognormal", 62))#
time = rbind(time, data.frame(MdAPE = sapply(1:62, function(d) median(abs((predtime2[d,]-truetime[d])/truetime[d]))), dist = rep("exponential", 62)))#
#
time = melt(time)#
stats = boxplot.stats(time$value)$stats#
#
colnames(time)[3] = "MdAPE"#
p[[3]]=ggplot(data = time, aes(x = dist, y = MdAPE, fill = dist))+geom_boxplot()+theme(legend.position = "bottom")+coord_cartesian(ylim=c(0, 100))
ggplot(data = time, aes(x = dist, y = MdAPE, fill = dist))+geom_boxplot()+theme(legend.position = "bottom")+coord_cartesian(ylim=c(0, 100))
ggplot(data = time, aes(x = dist, y = MdAPE, fill = dist))+geom_boxplot()+theme(legend.position = "bottom")
truetime = sapply(Montgomery_PPE$timemissing, function(d) edge[[d]]$t_d-edge[[d-1]]$t_d)/3600#
predtime = Montgomery_PPE$timepredict#
predtime2 = Montgomery_PPE2$timepredict#
#
time = data.frame(MdAPE = sapply(1:62, function(d) median(abs((predtime[d,]-truetime[d])/truetime[d]))), dist = rep("lognormal", 62))#
time = rbind(time, data.frame(MdAPE = sapply(1:62, function(d) median(abs((predtime2[d,]-truetime[d])/truetime[d]))), dist = rep("exponential", 62)))
head(time)
time$MdAPE = log(time$MdAPE)
time = melt(time)#
stats = boxplot.stats(time$value)$stats#
#
colnames(time)[3] = "MdAPE"
ggplot(data = time, aes(x = dist, y = MdAPE, fill = dist))+geom_boxplot()+theme(legend.position = "bottom")
time = data.frame(MdAE = sapply(1:62, function(d) mean(abs((predtime[d,]-truetime[d])/truetime[d]))), dist = rep("lognormal", 62))#
time = rbind(time, data.frame(MdAE = sapply(1:62, function(d) mean(abs((predtime2[d,]-truetime[d])/truetime[d]))), dist = rep("exponential", 62)))#
time$MdAE = log(time$MdAE)#
#
time = melt(time)#
colnames(time)[3] = "MdAE"#
ggplot(data = time, aes(x = dist, y = MdAE, fill = dist))+geom_boxplot()+ylim(0, 20)
ggplot(data = time, aes(x = dist, y = MdAE, fill = dist))+geom_boxplot()
p[[3]]=ggplot(data = time, aes(x = dist, y = MdAPE, fill = dist))+geom_boxplot()+theme(legend.position = "bottom")+coord_cartesian(ylim=c(0, 100))+ylab("log(MdAPE)")
p[[3]]
truetime = sapply(Montgomery_PPE$timemissing, function(d) edge[[d]]$t_d-edge[[d-1]]$t_d)/3600#
predtime = Montgomery_PPE$timepredict#
predtime2 = Montgomery_PPE2$timepredict#
#
time = data.frame(MdAPE = sapply(1:62, function(d) median(abs((predtime[d,]-truetime[d])/truetime[d]))), dist = rep("lognormal", 62))#
time = rbind(time, data.frame(MdAPE = sapply(1:62, function(d) median(abs((predtime2[d,]-truetime[d])/truetime[d]))), dist = rep("exponential", 62)))#
time$MdAPE = log(time$MdAPE)#
time = melt(time)#
stats = boxplot.stats(time$value)$stats#
#
colnames(time)[3] = "MdAPE"#
p[[3]]=ggplot(data = time, aes(x = dist, y = MdAPE, fill = dist))+geom_boxplot()+theme(legend.position = "bottom")+coord_cartesian(ylim=c(0, 100))+ylab("log(MdAPE)")
p[[3]]
p[[3]]=ggplot(data = time, aes(x = dist, y = MdAPE, fill = dist))+geom_boxplot()+theme(legend.position = "bottom")+ylab("log(MdAPE)")
p[[3]]
library(MLmetrics)
names(Montgomery_PPE)
head(Montgomery_PPE$receiverpredict)
library(MLmetrics)#
#
truereceiver = unlist(sapply(Montgomery_PPE$receivermissing, function(d) edge[[d]]$r_d[which(missing[[2]][d,]==1)]))#
predreceiver = Montgomery_PPE$receiverpredict#
predpreceiver2 = Montgomery_PPE2$receiverpredict
truereceiver
probtrue = sapply(1:1118, function(d) F1_Score(truereceiver, predreceiver[d,], 1))
dim(predreceiver)
probtrue = sapply(1:500, function(d) F1_Score(truereceiver, predreceiver[,d], 1))
probtrue
probtrue2 = sapply(1:500, function(d) F1_Score(truereceiver, predreceiver2[,d], 1))
truereceiver = unlist(sapply(Montgomery_PPE$receivermissing, function(d) edge[[d]]$r_d[which(missing[[2]][d,]==1)]))#
predreceiver = Montgomery_PPE$receiverpredict#
predpreceiver2 = Montgomery_PPE2$receiverpredict
probtrue = sapply(1:500, function(d) F1_Score(truereceiver, predreceiver[,d], 1))#
#probtrue[probtrue==1] = 0.999#
probtrue2 = sapply(1:500, function(d) F1_Score(truereceiver, predreceiver2[,d], 1))
predreceiver2 = Montgomery_PPE2$receiverpredict
probtrue2 = sapply(1:500, function(d) F1_Score(truereceiver, predreceiver2[,d], 1))
probtrue2
receiver = data.frame(F1score = probtrue, dist = rep("lognormal", 500))#
receiver = rbind(receiver, data.frame(F1score = probtrue2, dist = rep("exponential", 500)))#
receiver = melt(receiver)
head(receiver)
colnames(receiver)[3] = "F1score"
ggplot(data = receiver, aes(x = dist, y = F1score, fill = dist))+geom_boxplot()
library(gridExtra)#
library(latex2exp)#
p = list()#
##################
truesender = sapply(Montgomery_PPE$sendermissing, function(d) edge[[d]]$a_d)#
predprob = Montgomery_PPE$senderprob/rowSums(Montgomery_PPE$senderprob)#
predprob2 = Montgomery_PPE2$senderprob/rowSums(Montgomery_PPE2$senderprob)#
#
sender = data.frame(probtrue = sapply(1:62, function(d) predprob[d,truesender[d]]), dist = rep("lognormal", 62))#
sender = rbind(sender, data.frame(probtrue = sapply(1:62, function(d) predprob2[d,truesender[d]]), dist = rep("exponential", 62)))#
library(ggplot2)#
library(reshape)#
sender = melt(sender)#
colnames(sender)[3] = "correct"#
p[[1]]=ggplot(data = sender, aes(x = dist, y = correct, fill = dist))+geom_boxplot()+ylab("Correct sender posterior probability")+geom_hline(yintercept=1/18, col = 'blue', lty=2, lwd=1)
truereceiver = unlist(sapply(Montgomery_PPE$receivermissing, function(d) edge[[d]]$r_d[which(missing[[2]][d,]==1)]))#
predreceiver = Montgomery_PPE$receiverpredict#
predreceiver2 = Montgomery_PPE2$receiverpredict#
#
probtrue = sapply(1:500, function(d) F1_Score(truereceiver, predreceiver[,d], 1))#
probtrue2 = sapply(1:500, function(d) F1_Score(truereceiver, predreceiver2[,d], 1))#
#
receiver = data.frame(F1score = probtrue, dist = rep("lognormal", 500))#
receiver = rbind(receiver, data.frame(F1score = probtrue2, dist = rep("exponential", 500)))#
receiver = melt(receiver)#
colnames(receiver)[3] = "F1score"#
ggplot(data = receiver, aes(x = dist, y = F1score, fill = dist))+geom_boxplot()#
p[[2]]=ggplot(data = receiver, aes(x = logit, fill = dist))+geom_histogram(position = "dodge")
##################################################
truetime = sapply(Montgomery_PPE$timemissing, function(d) edge[[d]]$t_d-edge[[d-1]]$t_d)/3600#
predtime = Montgomery_PPE$timepredict#
predtime2 = Montgomery_PPE2$timepredict#
#
time = data.frame(MdAPE = sapply(1:62, function(d) median(abs((predtime[d,]-truetime[d])/truetime[d]))), dist = rep("lognormal", 62))#
time = rbind(time, data.frame(MdAPE = sapply(1:62, function(d) median(abs((predtime2[d,]-truetime[d])/truetime[d]))), dist = rep("exponential", 62)))#
time$MdAPE = log(time$MdAPE)#
time = melt(time)#
stats = boxplot.stats(time$value)$stats#
#
colnames(time)[3] = "MdAPE"#
p[[3]]=ggplot(data = time, aes(x = dist, y = MdAPE, fill = dist))+geom_boxplot()+theme(legend.position = "bottom")+ylab("log(MdAPE)")
g_legend<-function(a.gplot){#
  tmp <- ggplot_gtable(ggplot_build(a.gplot))#
  leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")#
  legend <- tmp$grobs[[leg]]#
  return(legend)}#
#
mylegend<-g_legend(p[[3]])#
p3 <- grid.arrange(arrangeGrob(#
				p[[1]] + theme(legend.position="none"),#
                        p[[2]] + theme(legend.position="none"),#
                         p[[3]] + theme(legend.position="none"), #
                       nrow=1), mylegend,#
        heights=c(10, 1))
library(gridExtra)#
library(latex2exp)#
p = list()#
##################
truesender = sapply(Montgomery_PPE$sendermissing, function(d) edge[[d]]$a_d)#
predprob = Montgomery_PPE$senderprob/rowSums(Montgomery_PPE$senderprob)#
predprob2 = Montgomery_PPE2$senderprob/rowSums(Montgomery_PPE2$senderprob)#
#
sender = data.frame(probtrue = sapply(1:62, function(d) predprob[d,truesender[d]]), dist = rep("lognormal", 62))#
sender = rbind(sender, data.frame(probtrue = sapply(1:62, function(d) predprob2[d,truesender[d]]), dist = rep("exponential", 62)))#
library(ggplot2)#
library(reshape)#
sender = melt(sender)#
colnames(sender)[3] = "correct"#
p[[1]]=ggplot(data = sender, aes(x = dist, y = correct, fill = dist))+geom_boxplot()+ylab("Correct sender posterior probability")+geom_hline(yintercept=1/18, col = 'blue', lty=2, lwd=1)
library(MLmetrics)#
#
truereceiver = unlist(sapply(Montgomery_PPE$receivermissing, function(d) edge[[d]]$r_d[which(missing[[2]][d,]==1)]))#
predreceiver = Montgomery_PPE$receiverpredict#
predreceiver2 = Montgomery_PPE2$receiverpredict#
#
probtrue = sapply(1:500, function(d) F1_Score(truereceiver, predreceiver[,d], 1))#
probtrue2 = sapply(1:500, function(d) F1_Score(truereceiver, predreceiver2[,d], 1))#
#
receiver = data.frame(F1score = probtrue, dist = rep("lognormal", 500))#
receiver = rbind(receiver, data.frame(F1score = probtrue2, dist = rep("exponential", 500)))#
receiver = melt(receiver)#
colnames(receiver)[3] = "F1score"
p[[2]]=ggplot(data = receiver, aes(x = dist, y = F1score, fill = dist))+geom_boxplot()
truetime = sapply(Montgomery_PPE$timemissing, function(d) edge[[d]]$t_d-edge[[d-1]]$t_d)/3600#
predtime = Montgomery_PPE$timepredict#
predtime2 = Montgomery_PPE2$timepredict#
#
time = data.frame(MdAPE = sapply(1:62, function(d) median(abs((predtime[d,]-truetime[d])/truetime[d]))), dist = rep("lognormal", 62))#
time = rbind(time, data.frame(MdAPE = sapply(1:62, function(d) median(abs((predtime2[d,]-truetime[d])/truetime[d]))), dist = rep("exponential", 62)))#
time$MdAPE = log(time$MdAPE)#
time = melt(time)#
stats = boxplot.stats(time$value)$stats#
#
colnames(time)[3] = "MdAPE"#
p[[3]]=ggplot(data = time, aes(x = dist, y = MdAPE, fill = dist))+geom_boxplot()+theme(legend.position = "bottom")+ylab("log(MdAPE)")
g_legend<-function(a.gplot){#
  tmp <- ggplot_gtable(ggplot_build(a.gplot))#
  leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")#
  legend <- tmp$grobs[[leg]]#
  return(legend)}#
#
mylegend<-g_legend(p[[3]])#
p3 <- grid.arrange(arrangeGrob(#
				p[[1]] + theme(legend.position="none"),#
                        p[[2]] + theme(legend.position="none"),#
                         p[[3]] + theme(legend.position="none"), #
                       nrow=1), mylegend,#
        heights=c(10, 1))
load('~/Desktop/Montgomery_infer.RData')
#source("/Users/bomin8319/Desktop/MulticastNetwork/code/Multicast.R")#
library(MulticastNetwork)#
library(lubridate)
library(anytime)#
library(ggplot2)#
library(MCMCpack)#
library(reshape2)#
library(gridExtra)#
library(ggrepel)#
library(RColorBrewer)#
colnames(Montgomery_infer$beta) = dimnames(Montgomery$X)[[4]]#
beta = data.frame(t(sapply(1:1000, function(i) Montgomery_infer$beta[40*i,])))#
colnames(beta) = dimnames(Montgomery$X)[[4]][1:10]#
colnames(beta)[6:7] = c("twosend", "tworeceive")#
colnames(beta) = dimnames(Montgomery$X)[[4]][1:10]#
beta.est = melt(beta[-1])#
colnames(beta.est)[1] = "netstats"#
colnames(beta.est)[2] = "b"#
ggplot(data = beta.est, aes(x = netstats, y = b, fill = netstats)) + geom_boxplot()+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 0.5, linetype = "dashed")+labs(x = NULL, fill = "Covariates")
colnames(Montgomery_infer$beta)
colnames(Montgomery_infer$beta) = c("intercept", "outdegree", "indegree", "send", "receiver",#
"2-send", "2-receive", "sibling", "cosibling", "hyperedge_size", "outdegree*hyperedge_size", "gender_sender", "gender_receiver",#
"gender_homophily")
beta = data.frame(t(sapply(1:1000, function(i) Montgomery_infer$beta[40*i,])))
head(beta)
beta = data.frame(t(sapply(1:5000, function(i) Montgomery_infer$beta[8*i,])))
head(beta)
beta.est = melt(beta[-1])
head(beta.est)
colnames(beta.est)[1] = "covariates"#
colnames(beta.est)[2] = "b"
names(beta.est)
head(beta.est$variable)
beta.est[,1] = as.factor(beta.est[,1])
head(beta.est)
head(beta.est[,1])
colnames(Montgomery_infer$beta) = c("intercept", "outdegree", "indegree", "send", "receiver",#
"two-send", "two-receive", "sibling", "cosibling", "hyperedge_size", "outdegree*hyperedge_size", "gender_sender", "gender_receiver",#
"gender_homophily")#
beta = data.frame(t(sapply(1:5000, function(i) Montgomery_infer$beta[8*i,])))#
# colnames(beta) = dimnames(Montgomery$X)[[4]][1:10]#
# colnames(beta)[6:7] = c("twosend", "tworeceive")#
# colnames(beta) = dimnames(Montgomery$X)[[4]][1:10]#
beta.est = melt(beta[-1])#
colnames(beta.est)[1] = "covariates"#
colnames(beta.est)[2] = "b"#
beta.est[,1] = as.factor(beta.est[,1])#
ggplot(data = beta.est, aes(x = netstats, y = b, fill = netstats)) + geom_boxplot()+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 0.5, linetype = "dashed")+labs(x = NULL, fill = "Covariates")
ggplot(data = beta.est, aes(x = netstats, y = b, fill = covariates)) + geom_boxplot()+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 0.5, linetype = "dashed")+labs(x = NULL, fill = "Covariates")
ggplot(data = beta.est, aes(x = covariates, y = b, fill = covariates)) + geom_boxplot()+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 0.5, linetype = "dashed")+labs(x = NULL, fill = "Covariates")
colnames(Montgomery_infer$beta) = c("intercept", "outdegree", "indegree", "send", "receiver",#
"two-send", "two-receive", "sibling", "cosibling", "hyperedge_size", "interaction", "gender_sender", "gender_receiver",#
"gender_homophily")#
beta = data.frame(t(sapply(1:5000, function(i) Montgomery_infer$beta[8*i,])))#
# colnames(beta) = dimnames(Montgomery$X)[[4]][1:10]#
# colnames(beta)[6:7] = c("twosend", "tworeceive")#
# colnames(beta) = dimnames(Montgomery$X)[[4]][1:10]#
beta.est = melt(beta[-1])#
colnames(beta.est)[1] = "covariates"#
colnames(beta.est)[2] = "b"#
beta.est[,1] = as.factor(beta.est[,1])#
ggplot(data = beta.est, aes(x = covariates, y = b, fill = covariates)) + geom_boxplot()+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 0.5, linetype = "dashed")+labs(x = NULL, fill = "Covariates")
colnames(Montgomery_infer$beta) = c("intercept", "outdegree", "indegree", "send", "receiver",#
"two_send", "two_receive", "sibling", "cosibling", "hyperedge_size", "interaction", "gender_sender", "gender_receiver",#
"gender_homophily")#
beta = data.frame(t(sapply(1:5000, function(i) Montgomery_infer$beta[8*i,])))#
# colnames(beta) = dimnames(Montgomery$X)[[4]][1:10]#
# colnames(beta)[6:7] = c("twosend", "tworeceive")#
# colnames(beta) = dimnames(Montgomery$X)[[4]][1:10]#
beta.est = melt(beta[-1])#
colnames(beta.est)[1] = "covariates"#
colnames(beta.est)[2] = "b"#
beta.est[,1] = as.factor(beta.est[,1])#
ggplot(data = beta.est, aes(x = covariates, y = b, fill = covariates)) + geom_boxplot()+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 0.5, linetype = "dashed")+labs(x = NULL, fill = "Covariates")
colnames(Montgomery_infer$beta) = c("intercept", "outdegree", "indegree", "send", "receiver",#
"two_send", "two_receive", "sibling", "cosibling", "hyperedge_size", "interaction", "gender_sender", "gender_receiver",#
"gender_homophily")#
beta = data.frame(t(sapply(1:5000, function(i) Montgomery_infer$beta[8*i,])))#
# colnames(beta) = dimnames(Montgomery$X)[[4]][1:10]#
# colnames(beta)[6:7] = c("twosend", "tworeceive")#
# colnames(beta) = dimnames(Montgomery$X)[[4]][1:10]#
beta.est = melt(beta[-1])#
colnames(beta.est)[1] = "covariates"#
colnames(beta.est)[2] = "b"#
beta.est[,1] = as.factor(beta.est[,1])#
beta.est$covariates <- factor(beta.est$Parameter, levels = c("gender_sender", "gender_receiver",#
"gender_homophily", "outdegree", "indegree","hyperedge_size", "interaction", "send", "receiver",#
"two_send", "two_receive", "sibling", "cosibling" ))#
#
ggplot(data = beta.est, aes(x = covariates, y = b, fill = covariates)) + geom_boxplot()+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 0.5, linetype = "dashed")+labs(x = NULL, fill = "Covariates")
beta.est$covariates <- factor(beta.est$covariates , levels = c("gender_sender", "gender_receiver",#
"gender_homophily", "outdegree", "indegree","hyperedge_size", "interaction", "send", "receiver",#
"two_send", "two_receive", "sibling", "cosibling" ))#
#
ggplot(data = beta.est, aes(x = covariates, y = b, fill = covariates)) + geom_boxplot()+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 0.5, linetype = "dashed")+labs(x = NULL, fill = "Covariates")
head(beta)
plot(beta[,14], type = 'l')
ggplot(data = beta.est, aes(x = covariates, y = b, fill = covariates)) + geom_boxplot()+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 0.5, linetype = "dashed")+labs(x = NULL, fill = "Covariates")
plot(beta[,12], type = 'l')
head(beta.est)
ggplot(data = beta.est[which(beta.est$covariates %in% c("gender_sender", "gender_receiver",#
"gender_homophily")),], aes(x = covariates, y = b, fill = covariates)) + geom_boxplot()+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 0.5, linetype = "dashed")+labs(x = NULL, fill = "Covariates")
ggplot(data = beta.est, aes(x = covariates, y = b, fill = covariates)) + geom_boxplot()+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 0.5, linetype = "dashed")+labs(x = NULL, fill = "Covariates")
ggplot(data = beta.est, aes(x = covariates, y = b, fill = covariates)) + geom_boxplot()+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 0.5, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+ facet_wrap( ~ variable, scales="free", nrow = 1)+theme(axis.title.x=element_blank(), axis.text.x=element_blank())
ggplot(data = beta.est, aes(x = covariates, y = b, fill = covariates)) + geom_boxplot()+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 0.5, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+ facet_wrap( ~ covariates, scales="free", nrow = 1)+theme(axis.title.x=element_blank(), axis.text.x=element_blank())
ggplot(data = beta.est[which(beta.est$covariates %in% c("gender_sender", "gender_receiver",#
"gender_homophily")),], aes(x = covariates, y = b, fill = covariates)) + geom_boxplot()+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 0.5, linetype = "dashed")+labs(x = NULL, fill = "Covariates")
ggplotColours <- function(n = 6, h = c(0, 360) + 15){#
  if ((diff(h) %% 360) < 1) h[2] <- h[2] - 360/n#
  hcl(h = (seq(h[1], h[2], length = n)), c = 100, l = 65)#
}#
number_ticks <- function(n) {function(limits) pretty(limits, n)}
ggplotColours(2)
colorsbeta = ggplotColours(13)
ggcolorsbeta
colorsbeta
ggplot(data = beta.est[which(beta.est$covariates %in% c("gender_sender", "gender_receiver",#
"gender_homophily")),], aes(x = covariates, y = b, fill = colorsbeta[1:3])) + geom_boxplot()+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 0.5, linetype = "dashed")+labs(x = NULL, fill = "Covariates")
ggplot(data = beta.est[which(beta.est$covariates %in% c("gender_sender", "gender_receiver",#
"gender_homophily")),], aes(x = covariates, y = b)) + geom_boxplot(fill=colorsbeta[1:3])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 0.5, linetype = "dashed")+labs(x = NULL, fill = "Covariates")
ggplot(data = beta.est[which(beta.est$covariates %in% c("outdegree", "indegree","hyperedge_size", "interaction")),], aes(x = covariates, y = b)) + geom_boxplot(fill=colorsbeta[4:7])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 0.5, linetype = "dashed")+labs(x = NULL, fill = "Covariates")
ggplot(data = beta.est[which(beta.est$covariates %in% c("send", "receiver",#
"two_send", "two_receive", "sibling", "cosibling")),], aes(x = covariates, y = b)) + geom_boxplot(fill=colorsbeta[8:13])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 0.5, linetype = "dashed")+labs(x = NULL, fill = "Covariates")
ggplot(data = beta.est[which(beta.est$covariates %in% c("gender_sender", "gender_receiver",#
"gender_homophily")),], aes(x = covariates, y = b)) + geom_boxplot(fill=colorsbeta[1:3])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 0.5, linetype = "dashed")+labs(x = NULL, fill = "Covariates")
bplot = list()#
bplot[[1]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("gender_sender", "gender_receiver",#
"gender_homophily")),], aes(x = covariates, y = b)) + geom_boxplot(fill=colorsbeta[1:3])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 0.5, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4.25)),legend.position="none")#
bplot[[2]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("outdegree", "indegree","hyperedge_size", "interaction")),], aes(x = covariates, y = b)) + geom_boxplot(fill=colorsbeta[4:7])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 0.5, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4.25)),legend.position="none")#
bplot[[3]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("send", "receiver",#
"two_send", "two_receive", "sibling", "cosibling")),], aes(x = covariates, y = b)) + geom_boxplot(fill=colorsbeta[8:13])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 0.5, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4.25)),legend.position="none")
bplot[[1]]
bplot[[2]]
bplot[[3]]
grid.arrange(bplot, ncol = 3, nrow = 1)
grid.arrange(bplot[[1]], bplot[[2]],bplot[[3]]. ncol = 3, nrow = 1)
grid.arrange(bplot[[1]], bplot[[2]],bplot[[3]], ncol = 3, nrow = 1)
bplot[[1]]
grid.arrange(bplot[[1]], bplot[[2]],bplot[[3]], ncol = 3, nrow = 1)
beta = data.frame(t(sapply(1:5000, function(i) Montgomery_infer$beta[8*i,])))#
# colnames(beta) = dimnames(Montgomery$X)[[4]][1:10]#
# colnames(beta)[6:7] = c("twosend", "tworeceive")#
# colnames(beta) = dimnames(Montgomery$X)[[4]][1:10]#
beta.est = melt(beta[-1])#
colnames(beta.est)[1] = "covariates"#
colnames(beta.est)[2] = "values"#
beta.est[,1] = as.factor(beta.est[,1])#
beta.est$covariates <- factor(beta.est$covariates , levels = c("gender_sender", "gender_receiver",#
"gender_homophily", "outdegree", "indegree","hyperedge_size", "interaction", "send", "receiver",#
"two_send", "two_receive", "sibling", "cosibling" ))#
#
bplot = list()#
bplot[[1]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("gender_sender", "gender_receiver",#
"gender_homophily")),], aes(x = covariates, y = values)) + geom_boxplot(fill=colorsbeta[1:3])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 0.5, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4.25)),legend.position="none")#
bplot[[2]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("outdegree", "indegree","hyperedge_size", "interaction")),], aes(x = covariates, y = b)) + geom_boxplot(fill=colorsbeta[4:7])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 0.5, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4.25)),legend.position="none")#
bplot[[3]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("send", "receiver",#
"two_send", "two_receive", "sibling", "cosibling")),], aes(x = covariates, y = b)) + geom_boxplot(fill=colorsbeta[8:13])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 0.5, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4.25)),legend.position="none")#
grid.arrange(bplot[[1]], bplot[[2]],bplot[[3]], ncol = 3, nrow = 1)
beta = data.frame(t(sapply(1:5000, function(i) Montgomery_infer$beta[8*i,])))#
# colnames(beta) = dimnames(Montgomery$X)[[4]][1:10]#
# colnames(beta)[6:7] = c("twosend", "tworeceive")#
# colnames(beta) = dimnames(Montgomery$X)[[4]][1:10]#
beta.est = melt(beta[-1])#
colnames(beta.est)[1] = "covariates"#
colnames(beta.est)[2] = "value"#
beta.est[,1] = as.factor(beta.est[,1])#
beta.est$covariates <- factor(beta.est$covariates , levels = c("gender_sender", "gender_receiver",#
"gender_homophily", "outdegree", "indegree","hyperedge_size", "interaction", "send", "receiver",#
"two_send", "two_receive", "sibling", "cosibling" ))#
#
bplot = list()#
bplot[[1]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("gender_sender", "gender_receiver",#
"gender_homophily")),], aes(x = covariates, y = value)) + geom_boxplot(fill=colorsbeta[1:3])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 0.5, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4.25)),legend.position="none")#
bplot[[2]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("outdegree", "indegree","hyperedge_size", "interaction")),], aes(x = covariates, y = value)) + geom_boxplot(fill=colorsbeta[4:7])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 0.5, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4.25)),legend.position="none")#
bplot[[3]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("send", "receiver",#
"two_send", "two_receive", "sibling", "cosibling")),], aes(x = covariates, y = value)) + geom_boxplot(fill=colorsbeta[8:13])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 0.5, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4.25)),legend.position="none")#
grid.arrange(bplot[[1]], bplot[[2]],bplot[[3]], ncol = 3, nrow = 1)
grid.arrange(bplot[[1]], bplot[[2]],bplot[[3]], ncol = 3, nrow = 1)
bplot = list()#
bplot[[1]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("gender_sender", "gender_receiver",#
"gender_homophily")),], aes(x = covariates, y = value, order = -as.numeric(covariates))) + geom_boxplot(fill=colorsbeta[1:3])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 0.5, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4.25)),legend.position="none")#
bplot[[2]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("outdegree", "indegree","hyperedge_size", "interaction")),], aes(x = covariates, y = value,order = -as.numeric(covariates))) + geom_boxplot(fill=colorsbeta[4:7])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 0.5, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4.25)),legend.position="none")#
bplot[[3]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("send", "receiver",#
"two_send", "two_receive", "sibling", "cosibling")),], aes(x = covariates, y = value,order = -as.numeric(covariates))) + geom_boxplot(fill=colorsbeta[8:13])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 0.5, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4.25)),legend.position="none")
grid.arrange(bplot[[1]], bplot[[2]],bplot[[3]], ncol = 3, nrow = 1)
bplot = list()#
bplot[[1]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("gender_sender", "gender_receiver",#
"gender_homophily")),], aes(x = covariates, y = value, order = as.numeric(covariates))) + geom_boxplot(fill=colorsbeta[1:3])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 0.5, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4.25)),legend.position="none")#
bplot[[2]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("outdegree", "indegree","hyperedge_size", "interaction")),], aes(x = covariates, y = value,order = as.numeric(covariates))) + geom_boxplot(fill=colorsbeta[4:7])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 0.5, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4.25)),legend.position="none")#
bplot[[3]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("send", "receiver",#
"two_send", "two_receive", "sibling", "cosibling")),], aes(x = covariates, y = value,order = as.numeric(covariates))) + geom_boxplot(fill=colorsbeta[8:13])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 0.5, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4.25)),legend.position="none")#
grid.arrange(bplot[[1]], bplot[[2]],bplot[[3]], ncol = 3, nrow = 1)
ggplot(data = beta.est[which(beta.est$covariates %in% c("gender_sender", "gender_receiver",#
"gender_homophily")),], aes(x = reorder(covariates,-as.numeric(covariates)) , y = value) + geom_boxplot(fill=colorsbeta[1:3])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 0.5, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4.25)),legend.position="none")
ggplot(data = beta.est[which(beta.est$covariates %in% c("gender_sender", "gender_receiver",#
"gender_homophily")),], aes(x = reorder(covariates,-as.numeric(covariates)) , y = value))+ geom_boxplot(fill=colorsbeta[1:3])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 0.5, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4.25)),legend.position="none")
bplot = list()#
bplot[[1]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("gender_sender", "gender_receiver",#
"gender_homophily")),], aes(x = reorder(covariates,-as.numeric(covariates)) , y = value))+ geom_boxplot(fill=colorsbeta[3:1])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 0.5, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4.25)),legend.position="none")#
bplot[[2]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("outdegree", "indegree","hyperedge_size", "interaction")),], aes(x = reorder(covariates,-as.numeric(covariates)), y = value)) + geom_boxplot(fill=colorsbeta[7:4])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 0.5, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4.25)),legend.position="none")#
bplot[[3]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("send", "receiver",#
"two_send", "two_receive", "sibling", "cosibling")),], aes(x = reorder(covariates,-as.numeric(covariates)), y = value)) + geom_boxplot(fill=colorsbeta[13:8])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 0.5, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4.25)),legend.position="none")#
grid.arrange(bplot[[1]], bplot[[2]],bplot[[3]], ncol = 3, nrow = 1)
bplot = list()#
bplot[[1]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("gender_sender", "gender_receiver",#
"gender_homophily")),], aes(x = reorder(covariates,-as.numeric(covariates)) , y = value))+ geom_boxplot(fill=colorsbeta[3:1])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 0.5, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(3)),legend.position="none")#
bplot[[2]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("outdegree", "indegree","hyperedge_size", "interaction")),], aes(x = reorder(covariates,-as.numeric(covariates)), y = value)) + geom_boxplot(fill=colorsbeta[7:4])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 0.5, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(3)),legend.position="none")#
bplot[[3]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("send", "receiver",#
"two_send", "two_receive", "sibling", "cosibling")),], aes(x = reorder(covariates,-as.numeric(covariates)), y = value)) + geom_boxplot(fill=colorsbeta[13:8])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 0.5, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(3)),legend.position="none")#
grid.arrange(bplot[[1]], bplot[[2]],bplot[[3]], ncol = 3, nrow = 1)
bplot = list()#
bplot[[1]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("gender_sender", "gender_receiver",#
"gender_homophily")),], aes(x = reorder(covariates,-as.numeric(covariates)) , y = value))+ geom_boxplot(fill=colorsbeta[3:1])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 0.5, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4)),legend.position="none")#
bplot[[2]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("outdegree", "indegree","hyperedge_size", "interaction")),], aes(x = reorder(covariates,-as.numeric(covariates)), y = value)) + geom_boxplot(fill=colorsbeta[7:4])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 0.5, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4)),legend.position="none")#
bplot[[3]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("send", "receiver",#
"two_send", "two_receive", "sibling", "cosibling")),], aes(x = reorder(covariates,-as.numeric(covariates)), y = value)) + geom_boxplot(fill=colorsbeta[13:8])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 0.5, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4)),legend.position="none")#
grid.arrange(bplot[[1]], bplot[[2]],bplot[[3]], ncol = 3, nrow = 1)
bplot = list()#
bplot[[1]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("gender_sender", "gender_receiver",#
"gender_homophily")),], aes(x = reorder(covariates,-as.numeric(covariates)) , y = value))+ geom_boxplot(fill=colorsbeta[3:1])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 1, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4)),legend.position="none")#
bplot[[2]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("outdegree", "indegree","hyperedge_size", "interaction")),], aes(x = reorder(covariates,-as.numeric(covariates)), y = value)) + geom_boxplot(fill=colorsbeta[7:4])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 1, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4)),legend.position="none")#
bplot[[3]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("send", "receiver",#
"two_send", "two_receive", "sibling", "cosibling")),], aes(x = reorder(covariates,-as.numeric(covariates)), y = value)) + geom_boxplot(fill=colorsbeta[13:8])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size =1, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4)),legend.position="none")#
grid.arrange(bplot[[1]], bplot[[2]],bplot[[3]], ncol = 3, nrow = 1)
grid.arrange(bplot[[1]], bplot[[2]],bplot[[3]], ncol = 1, nrow = 3)
ggplot(data = beta.est, aes(x = reorder(covariates,-as.numeric(covariates)) , y = value))+ geom_boxplot(fill=colorsbeta[13:1])+ geom_hline(yintercept = 0.0, colour = "red", size = 1, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4)),legend.position="none")
grid.arrange(bplot[[1]], bplot[[2]],bplot[[3]], ncol = 1, nrow = 3)
ggplot(data = beta.est, aes(x = reorder(covariates,-as.numeric(covariates)) , y = value))+ geom_boxplot(fill=colorsbeta[13:1])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 1, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4)),legend.position="none")
bplot = list()#
bplot[[1]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("gender_sender", "gender_receiver",#
"gender_homophily", "outdegree", "indegree","hyperedge_size", "interaction")),], aes(x = reorder(covariates,-as.numeric(covariates)) , y = value))+ geom_boxplot(fill=colorsbeta[7:1])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 1, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4)),legend.position="none")#
bplot[[2]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("send", "receiver",#
"two_send", "two_receive", "sibling", "cosibling")),], aes(x = reorder(covariates,-as.numeric(covariates)), y = value)) + geom_boxplot(fill=colorsbeta[13:8])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size =1, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4)),legend.position="none")
grid.arrange(bplot[[1]], bplot[[2]], ncol = 1, nrow = 2)
ggplot(data = beta.est, aes(x = reorder(covariates,-as.numeric(covariates)) , y = value))+ geom_boxplot(fill=colorsbeta[13:1])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 1, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4)),legend.position="none")
bplot = list()#
bplot[[1]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("gender_sender", "gender_receiver",#
"gender_homophily")),], aes(x = reorder(covariates,-as.numeric(covariates)) , y = value))+ geom_boxplot(fill=colorsbeta[3:1])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 1, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4)),legend.position="none")#
bplot[[2]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("outdegree", "indegree","hyperedge_size", "interaction")),], aes(x = reorder(covariates,-as.numeric(covariates)), y = value)) + geom_boxplot(fill=colorsbeta[7:4])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 1, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4)),legend.position="none")#
bplot[[3]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("send", "receiver",#
"two_send", "two_receive", "sibling", "cosibling")),], aes(x = reorder(covariates,-as.numeric(covariates)), y = value)) + geom_boxplot(fill=colorsbeta[13:8])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size =1, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4)),legend.position="none")#
grid.arrange(bplot[[1]], bplot[[2]],bplot[[3]], ncol = 3, nrow = 1)
ggplot(data = beta.est, aes(x = reorder(covariates,-as.numeric(covariates)) , y = value))+ geom_boxplot(fill=colorsbeta[13:1])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 1, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4)),legend.position="none")
grid.arrange(bplot[[1]], bplot[[2]],bplot[[3]], ncol = 3, nrow = 1)
bplot = list()#
bplot[[1]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("gender_sender", "gender_receiver",#
"gender_homophily", "outdegree", "indegree","hyperedge_size", "interaction")),], aes(x = reorder(covariates,-as.numeric(covariates)) , y = value))+ geom_boxplot(fill=colorsbeta[7:1])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 1, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4)),legend.position="none")#
bplot[[2]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("send", "receiver",#
"two_send", "two_receive", "sibling", "cosibling")),], aes(x = reorder(covariates,-as.numeric(covariates)), y = value)) + geom_boxplot(fill=colorsbeta[13:8])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size =1, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4)),legend.position="none")#
grid.arrange(bplot[[1]], bplot[[2]], ncol = 1, nrow = 2)
grid.arrange(bplot[[1]], bplot[[2]],bplot[[3]], ncol = 1, nrow = 3)
bplot = list()#
bplot[[1]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("gender_sender", "gender_receiver",#
"gender_homophily")),], aes(x = reorder(covariates,-as.numeric(covariates)) , y = value))+ geom_boxplot(fill=colorsbeta[3:1])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 1, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4)),legend.position="none")#
bplot[[2]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("outdegree", "indegree","hyperedge_size", "interaction")),], aes(x = reorder(covariates,-as.numeric(covariates)), y = value)) + geom_boxplot(fill=colorsbeta[7:4])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 1, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4)),legend.position="none")#
bplot[[3]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("send", "receiver",#
"two_send", "two_receive", "sibling", "cosibling")),], aes(x = reorder(covariates,-as.numeric(covariates)), y = value)) + geom_boxplot(fill=colorsbeta[13:8])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size =1, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4)),legend.position="none")#
grid.arrange(bplot[[1]], bplot[[2]],bplot[[3]], ncol = 1, nrow = 3)
grid.arrange(bplot[[1]], bplot[[2]],bplot[[3]], ncol = 1, nrow = 3)
ggplot(data = beta.est, aes(x = reorder(covariates,-as.numeric(covariates)) , y = value))+ geom_boxplot(fill=colorsbeta[13:1])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 1, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4)),legend.position="none")
bplot = list()#
bplot[[1]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("gender_sender", "gender_receiver",#
"gender_homophily", "outdegree", "indegree","hyperedge_size", "interaction")),], aes(x = reorder(covariates,-as.numeric(covariates)) , y = value))+ geom_boxplot(fill=colorsbeta[7:1])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 1, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4)),legend.position="none")#
bplot[[2]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("send", "receiver",#
"two_send", "two_receive", "sibling", "cosibling")),], aes(x = reorder(covariates,-as.numeric(covariates)), y = value)) + geom_boxplot(fill=colorsbeta[13:8])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size =1, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4)),legend.position="none")#
grid.arrange(bplot[[1]], bplot[[2]], ncol = 1, nrow = 2)
ggplot(data = beta.est, aes(x = reorder(covariates,-as.numeric(covariates)) , y = value))+ geom_boxplot(fill=colorsbeta[13:1])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 1, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4)),legend.position="none")
bplot = list()#
bplot[[1]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("gender_sender", "gender_receiver",#
"gender_homophily", "outdegree", "indegree","hyperedge_size", "interaction")),], aes(x = reorder(covariates,-as.numeric(covariates)) , y = value))+ geom_boxplot(fill=colorsbeta[7:1])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 1, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4)),legend.position="none")#
bplot[[2]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("send", "receiver",#
"two_send", "two_receive", "sibling", "cosibling")),], aes(x = reorder(covariates,-as.numeric(covariates)), y = value)) + geom_boxplot(fill=colorsbeta[13:8])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size =1, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4)),legend.position="none")#
grid.arrange(bplot[[1]], bplot[[2]], ncol = 1, nrow = 2)
colnames(Montgomery_infer$beta) = c("intercept", "outdegree", "indegree", "send", "receiver",#
"two_send", "     two_receive", "sibling", "cosibling", "hyperedge_size", "interaction", "gender_sender", "gender_receiver",#
"gender_homophily")#
beta = data.frame(t(sapply(1:5000, function(i) Montgomery_infer$beta[8*i,])))#
# colnames(beta) = dimnames(Montgomery$X)[[4]][1:10]#
# colnames(beta)[6:7] = c("twosend", "tworeceive")#
# colnames(beta) = dimnames(Montgomery$X)[[4]][1:10]#
beta.est = melt(beta[-1])#
colnames(beta.est)[1] = "covariates"#
colnames(beta.est)[2] = "value"#
beta.est[,1] = as.factor(beta.est[,1])#
beta.est$covariates <- factor(beta.est$covariates , levels = c("gender_sender", "gender_receiver",#
"gender_homophily", "outdegree", "indegree","hyperedge_size", "interaction", "send", "receiver",#
"two_send", "     two_receive", "sibling", "cosibling" ))
bplot = list()#
bplot[[1]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("gender_sender", "gender_receiver",#
"gender_homophily", "outdegree", "indegree","hyperedge_size", "interaction")),], aes(x = reorder(covariates,-as.numeric(covariates)) , y = value))+ geom_boxplot(fill=colorsbeta[7:1])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 1, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4)),legend.position="none")#
bplot[[2]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("send", "receiver",#
"two_send", "     two_receive", "sibling", "cosibling")),], aes(x = reorder(covariates,-as.numeric(covariates)), y = value)) + geom_boxplot(fill=colorsbeta[13:8])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size =1, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4)),legend.position="none")#
grid.arrange(bplot[[1]], bplot[[2]], ncol = 1, nrow = 2)
colnames(Montgomery_infer$beta) = c("intercept", "outdegree", "indegree", "send", "receiver",#
"two_send", "     two_receive", "sibling", "cosibling", "hyperedge_size", "interaction", "gender_sender", "gender_receiver",#
"gender_homophily")#
beta = data.frame(t(sapply(1:5000, function(i) Montgomery_infer$beta[8*i,])))#
# colnames(beta) = dimnames(Montgomery$X)[[4]][1:10]#
# colnames(beta)[6:7] = c("twosend", "tworeceive")#
# colnames(beta) = dimnames(Montgomery$X)[[4]][1:10]#
beta.est = melt(beta[-1])#
colnames(beta.est)[1] = "covariates"#
colnames(beta.est)[2] = "value"#
beta.est[,1] = as.factor(beta.est[,1])#
beta.est$covariates <- factor(beta.est$covariates , levels = c("gender_sender", "gender_receiver",#
"gender_homophily", "outdegree", "indegree","hyperedge_size", "interaction", "send", "receiver",#
"two_send", "     two_receive", "sibling", "cosibling" ))
beta.est$covariates
head(Montgomery_infer$beta)
colnames(Montgomery_infer$beta) = c("intercept", "outdegree", "indegree", "send", "receiver",#
"two_send", "two_receive", "sibling", "cosibling", "hyperedge_size", "interaction", "gender_sender", "gender_receiver",#
"gender_homophily")#
beta = data.frame(t(sapply(1:5000, function(i) Montgomery_infer$beta[8*i,])))#
# colnames(beta) = dimnames(Montgomery$X)[[4]][1:10]#
# colnames(beta)[6:7] = c("twosend", "tworeceive")#
# colnames(beta) = dimnames(Montgomery$X)[[4]][1:10]#
beta.est = melt(beta[-1])#
colnames(beta.est)[1] = "covariates"#
colnames(beta.est)[2] = "value"#
beta.est[,1] = as.factor(beta.est[,1])#
beta.est$covariates <- factor(beta.est$covariates , levels = c("gender_sender", "gender_receiver",#
"gender_homophily", "outdegree", "indegree","hyperedge_size", "interaction", "send", "receiver",#
"two_send", "two_receive", "sibling", "cosibling" ))
bplot = list()#
bplot[[1]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("gender_sender", "gender_receiver",#
"gender_homophily", "outdegree", "indegree","hyperedge_size", "interaction")),], aes(x = reorder(covariates,-as.numeric(covariates)) , y = value))+ geom_boxplot(fill=colorsbeta[7:1])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 1, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4)),legend.position="none")#
bplot[[2]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("send", "receiver",#
"two_send", "two_receive", "sibling", "cosibling")),], aes(x = reorder(covariates,-as.numeric(covariates)), y = value)) + geom_boxplot(fill=colorsbeta[13:8])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size =1, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4)),legend.position="none")#
grid.arrange(bplot[[1]], bplot[[2]], ncol = 1, nrow = 2)
ggplot(data = beta.est, aes(x = reorder(covariates,-as.numeric(covariates)) , y = value))+ geom_boxplot(fill=colorsbeta[13:1])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 1, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4)),legend.position="none")
ggplot(data = beta.est, aes(x = reorder(covariates,-as.numeric(covariates)) , y = value))+ geom_boxplot(fill=colorsbeta[13:1])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 1, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(5)),legend.position="none")
ggplot(data = beta.est, aes(x = reorder(covariates,-as.numeric(covariates)) , y = value))+ geom_boxplot(fill=colorsbeta[13:1])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 1, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4.25)),legend.position="none")
bplot = list()#
bplot[[1]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("gender_sender", "gender_receiver",#
"gender_homophily", "outdegree", "indegree","hyperedge_size", "interaction")),], aes(x = reorder(covariates,-as.numeric(covariates)) , y = value))+ geom_boxplot(fill=colorsbeta[7:1])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 1, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4)),legend.position="none")#
bplot[[2]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("send", "receiver",#
"two_send", "two_receive", "sibling", "cosibling")),], aes(x = reorder(covariates,-as.numeric(covariates)), y = value)) + geom_boxplot(fill=colorsbeta[13:8])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size =1, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4)),legend.position="none")#
grid.arrange(bplot[[1]], bplot[[2]], ncol =2, nrow = 1)
bplot[[1]]
bplot = list()#
bplot[[1]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("gender_sender", "gender_receiver",#
"gender_homophily", "outdegree", "indegree","hyperedge_size", "interaction")),], aes(x = reorder(covariates,-as.numeric(covariates)) , y = value))+ geom_boxplot(fill=colorsbeta[7:1])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 1, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4.25)),legend.position="none")#
bplot[[2]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("send", "receiver",#
"two_send", "two_receive", "sibling", "cosibling")),], aes(x = reorder(covariates,-as.numeric(covariates)), y = value)) + geom_boxplot(fill=colorsbeta[13:8])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size =1, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4.25)),legend.position="none")
bplot[[1]]
bplot = list()#
bplot[[1]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("gender_sender", "gender_receiver",#
"gender_homophily", "outdegree", "indegree","hyperedge_size", "interaction")),], aes(x = reorder(covariates,-as.numeric(covariates)) , y = value))+ geom_boxplot(fill=colorsbeta[7:1])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 1, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4.5)),legend.position="none")#
bplot[[2]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("send", "receiver",#
"two_send", "two_receive", "sibling", "cosibling")),], aes(x = reorder(covariates,-as.numeric(covariates)), y = value)) + geom_boxplot(fill=colorsbeta[13:8])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size =1, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4.5)),legend.position="none")
bplot[[1]]
bplot[[2]]
beta = data.frame(t(sapply(1:5000, function(i) Montgomery_infer$beta[8*i,])))#
# colnames(beta) = dimnames(Montgomery$X)[[4]][1:10]#
# colnames(beta)[6:7] = c("twosend", "tworeceive")#
# colnames(beta) = dimnames(Montgomery$X)[[4]][1:10]#
beta.est = melt(beta[-1])#
colnames(beta.est)[1] = "covariates"#
colnames(beta.est)[2] = "b"#
beta.est[,1] = as.factor(beta.est[,1])#
beta.est$covariates <- factor(beta.est$covariates , levels = c("gender_sender", "gender_receiver",#
"gender_homophily", "outdegree", "indegree","hyperedge_size", "interaction", "send", "receiver",#
"two_send", "two_receive", "sibling", "cosibling" ))
bplot = list()#
bplot[[1]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("gender_sender", "gender_receiver",#
"gender_homophily", "outdegree", "indegree","hyperedge_size", "interaction")),], aes(x = reorder(covariates,-as.numeric(covariates)) , y = b))+ geom_boxplot(fill=colorsbeta[7:1])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 1, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(5)),legend.position="none")#
bplot[[2]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("send", "receiver",#
"two_send", "two_receive", "sibling", "cosibling")),], aes(x = reorder(covariates,-as.numeric(covariates)), y = b)) + geom_boxplot(fill=colorsbeta[13:8])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size =1, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(5)),legend.position="none")
bplot[[1]]
bplot[[2]]
bplot = list()#
bplot[[1]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("gender_sender", "gender_receiver",#
"gender_homophily", "outdegree", "indegree","hyperedge_size", "interaction")),], aes(x = reorder(covariates,-as.numeric(covariates)) , y = b))+ geom_boxplot(fill=colorsbeta[7:1])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 1, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(5.5)),legend.position="none")#
bplot[[2]] = ggplot(data = beta.est[which(beta.est$covariates %in% c("send", "receiver",#
"two_send", "two_receive", "sibling", "cosibling")),], aes(x = reorder(covariates,-as.numeric(covariates)), y = b)) + geom_boxplot(fill=colorsbeta[13:8])+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size =1, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(5.5)),legend.position="none")
bplot[[1]]
bplot[[2]]
colnames(Montgomery_infer$eta) = dimnames(Montgomery$Y)[[3]]
eta = data.frame(t(sapply(1:5000, function(i) Montgomery_infer$eta[8*i,])))#
eta.est = melt(eta[-1])#
colnames(eta.est)[1] = "netstats"#
colnames(eta.est)[2] = "eta"#
ggplot(data = eta.est, aes(x = netstats, y = eta, fill = netstats)) + geom_boxplot()+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size = 0.5, linetype = "dashed")+labs(x = NULL, fill = "Covariates")
colnames(Montgomery_infer$eta) = c("intercept","gender", "manager", "outdegree", "indegree", "weekend", "PM")#
eta = data.frame(t(sapply(1:5000, function(i) Montgomery_infer$eta[8*i,])))#
eta.est = melt(eta[-1])#
colnames(eta.est)[1] = "covariates"#
colnames(eta.est)[2] = "eta"#
eta.est[,1] = as.factor(eta.est[,1])#
ggplot(data = eta.est, aes(x = reorder(covariates,-as.numeric(covariates)), y = eta, fill = netstats)) + geom_boxplot()+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size =1, linetype = "dashed")+labs(x = NULL, fill = "covariates")
ggplot(data = eta.est, aes(x = reorder(covariates,-as.numeric(covariates)), y = eta, fill =covariates)) + geom_boxplot()+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size =1, linetype = "dashed")+labs(x = NULL, fill = "covariates")
ggplot(data = eta.est, aes(x = reorder(covariates,-as.numeric(covariates)), y = eta, fill =covariates)) + geom_boxplot()+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size =1, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(4.25)),legend.position="none")
ggplot(data = eta.est, aes(x = reorder(covariates,-as.numeric(covariates)), y = eta, fill =covariates)) + geom_boxplot()+coord_flip()+ geom_hline(yintercept = 0.0, colour = "red", size =1, linetype = "dashed")+labs(x = NULL, fill = "Covariates")+theme(plot.title = element_blank(),text = element_text(size = rel(5.5)),legend.position="none")
load('~/Desktop/Montgomery_infer.RData')
#source("/Users/bomin8319/Desktop/MulticastNetwork/code/Multicast.R")#
library(MulticastNetwork)#
library(lubridate)
setwd("/Users/bomin8319/Desktop/MulticastNetwork/Emails/PPC4")
for (n in 1:500) {#
    Montgomery_PPC = PPC(length(edge), beta = colMeans(Montgomery_infer$beta), eta = colMeans(Montgomery_infer$eta),#
    sigma2 = mean(Montgomery_infer$sigma2), X, Y, timeunit = 3600, u = Montgomery_infer$u, timedist = "lognormal")#
  filename = paste0("Montgomery_PPCnew", n,".RData")#
  save(Montgomery_PPC, file = filename)#
}
#source("/Users/bomin8319/Desktop/MulticastNetwork/code/Multicast.R")#
#
library(MulticastNetwork)#
library(lubridate)#
load('~/Desktop/MulticastNetwork/code/Temporal_Email_Data.Rdata')#
Montgomery = Temporal_Email_Data$Montgomery#
email = Montgomery$email_data#
email = unique(email)#
email$timepoints =  as.numeric(as.POSIXct(strptime(email[,1], "%d %b %Y %H:%M:%S")))#
email = email[order(email$timepoints), ]#
edge = list()#
initialtime =  as.numeric(as.POSIXct(strptime("01 Mar 2012 00:00:00", "%d %b %Y %H:%M:%S")))#
for (d in 1:nrow(email)) {#
	t_d = email[d, 21] - initialtime#
	edge[[d]] = list(a_d = email[d,2], r_d = as.numeric(email[d,-c(1:2, 21)]), t_d = t_d)#
}#
#
uniqtime = unique(email$timepoints)#
# construct time covariates Y#
D = length(edge)#
A = length(Montgomery$manager_gender)#
Q = 7#
Y = array(1, dim = c(D,A,Q))#
for (a in 1:A) {#
	Y[,a,2] = 1* (Montgomery$manager_gender[a]=="Female")#
	Y[,a,3] = 1* (Montgomery$manager_department[a]=="County Manager")#
}#
timeunit = 3600#
Y[1,,6] = rep(as.numeric(wday(as.POSIXct(strptime("01 Mar 2012 00:00:00", "%d %b %Y %H:%M:%S"))) %in% c(1, 7)), A)#
Y[1,,7] = rep(pm(as.POSIXct(strptime("01 Mar 2012 00:00:00", "%d %b %Y %H:%M:%S"))), A)#
for (d in 2:D) {#
	index = which(email$timepoints >= uniqtime[which(uniqtime==email$timepoints[d])-1]-7*24*timeunit & email$timepoints < email$timepoints[d])#
	sent = email[index, 2]#
	received = email[index, 3:(2+A)]#
	Y[d, ,4] = tabulate(sent, A) #
	Y[d, ,5] = colSums(received)#
	Y[d,,6] = rep(as.numeric(wday(as.POSIXct(strptime(email[d-1,1], "%d %b %Y %H:%M:%S"))) %in% c(1, 7)), A)#
	Y[d,,7] = rep(as.numeric(pm(as.POSIXct(strptime(email[d-1,1], "%d %b %Y %H:%M:%S")))), A)#
}#
sendraw = function(data, a, r) {#
	sum(data[,2] == a & data[, 2+r]==1)#
}#
#
# construct recipient covariates X#
D = length(edge)#
A = length(Montgomery$manager_gender)#
P = 14#
X = array(0, dim = c(D,A,A,P))#
X[,,,1] = 1#
timeunit = 3600#
for (d in 2:D) {#
	index = which(email$timepoints >= uniqtime[which(uniqtime==email$timepoints[d])-1]-7*24*timeunit & email$timepoints < email$timepoints[d])#
	data = email[index, ]#
	sent = data[, 2]#
	received = data[, 3:(2+A)]#
	outdegree = tabulate(sent, A)#
	indegree = colSums(received)#
	for (a in 1:A) {#
		for (r in c(1:A)) {#
		  if (r != a) {#
			X[d, a, r, 2] = outdegree[a]  #
			X[d, a, r, 3] = indegree[r]	#
			X[d, a, r, 4] = sendraw(data, a, r)#
			X[d, a, r, 5] = sendraw(data, r, a)#
			X[d, a, r, 6] = sum(sapply(c(1:A)[-c(a,r)], function(h) {#
				sendraw(data, a, h) * sendraw(data, h, r) / 10#
				}))#
			X[d, a, r, 7] = sum(sapply(c(1:A)[-c(a,r)], function(h) {#
				sendraw(data, h, a) * sendraw(data, r, h)#
				})) / 10#
			X[d, a, r, 8] = sum(sapply(c(1:A)[-c(a,r)], function(h) {#
				sendraw(data, h, a) * sendraw(data, h, r)#
				})) / 10#
			X[d, a, r, 9] = sum(sapply(c(1:A)[-c(a,r)], function(h) {#
				sendraw(data, a, h) * sendraw(data, r, h)#
				}))	/10	#
		  }#
		    X[d, a, , 12] = 1* (Montgomery$manager_gender[a]=="Female")#
			  X[d, a, r, 13] =1* (Montgomery$manager_gender[r]=="Female")#
			  X[d, a, r, 14] =1* (Montgomery$manager_gender[a]==Montgomery$manager_gender[r])#
		}#
	  X[d, a, , 10] = ifelse(outdegree[a] <sum(X[d,a,,4]),sum(X[d,a,,4])/outdegree[a] , 1)#
	  X[d, a, , 11] = X[d, a, , 2] * X[d, a, , 10] / 10#
	}#
}#
#
prior.beta = list(mean = c(-3.5, rep(0, P-1)), var = 2*diag(P))#
prior.eta = list(mean = c(7, rep(0, Q-1)), var = 2*diag(Q))#
prior.sigma2 = list(a = 2, b = 1)#
email$timepoints =  as.numeric(as.POSIXct(strptime(email[,1], "%d %b %Y %H:%M:%S")))#
trim = which(email$timepoints >=7*24*timeunit+email$timepoints[1])#
edge = edge[trim]#
X = X[trim,,,]#
Y = Y[trim,,]
load('~/Desktop/Montgomery_infer.RData')
setwd("/Users/bomin8319/Desktop/MulticastNetwork/Emails/PPC4")
initial = list()#
initial$sender = email[1:(min(trim)-1), 2]#
initial$receiver = email[1:(min(trim)-1), 3:20]#
initial$time = email[1:(min(trim)-1),1]#
for (n in 1:500) {#
    Montgomery_PPC = PPC(length(edge), beta = colMeans(Montgomery_infer$beta), eta = colMeans(Montgomery_infer$eta),#
    sigma2 = mean(Montgomery_infer$sigma2), X, Y, timeunit = 3600, u = Montgomery_infer$u, timedist = "lognormal")#
  filename = paste0("Montgomery_PPCnew", n,".RData")#
  save(Montgomery_PPC, file = filename)#
}
indegreedist2 = matrix(NA, 500, A)#
outdegreedist2 = matrix(NA,  500, A)#
recipientsdist2 = matrix(NA,  500, A-1)#
timedist2 = matrix(NA, 500, 621)#
#setwd("/Users/bomin8319/Desktop/MulticastNetwork/Emails/PPC")#
#setwd("/Users/bomin8319/")#
setwd("/Users/bomin8319/Desktop/MulticastNetwork/Emails/PPC4")#
#
for (n in 1:500) {#
	filename = paste0("Montgomery_PPCnew2", n,".RData")#
	load(filename)#
	outdegreedist2[n, ] = tabulate(vapply(1:621, function(x) Montgomery_PPC2[[x]]$a_d, c(1)), A)#
	indegreedist2[n, ] = rowSums(sapply(1:621, function(x) Montgomery_PPC2[[x]]$r_d))#
	recipientsdist2[n, ] = tabulate(vapply(1:621, function(x) sum(Montgomery_PPC2[[x]]$r_d), c(1)), A-1)#
	timedist2[n, ] = vapply(1:621, function(x) Montgomery_PPC2[[x]]$t_d, c(1))/ timeunit#
} #
#
outdegreedist = data.frame(outdegreedist)#
colnames(outdegreedist)=1:18#
library(ggplot2)#
library(reshape)#
data = melt(outdegreedist)#
colnames(data) = c("Node", "Outdegree")
load('~/Desktop/MulticastNetwork/code/Temporal_Email_Data.Rdata')#
Montgomery = Temporal_Email_Data$Montgomery#
email = Montgomery$email_data#
email = unique(email)#
email$timepoints =  as.numeric(as.POSIXct(strptime(email[,1], "%d %b %Y %H:%M:%S")))#
email = email[order(email$timepoints), ]#
edge = list()#
initialtime =  as.numeric(as.POSIXct(strptime("01 Mar 2012 00:00:00", "%d %b %Y %H:%M:%S")))#
for (d in 1:nrow(email)) {#
	t_d = email[d, 21] - initialtime#
	edge[[d]] = list(a_d = email[d,2], r_d = as.numeric(email[d,-c(1:2, 21)]), t_d = t_d)#
}#
A = length(Montgomery$manager_gender)#
#
#observed statistics#
timeunit = 3600#
trim = which(email$timepoints >=7*24*timeunit+email$timepoints[1])#
#
outdegree = tabulate(email[trim,2], A)#
indegree = colSums(email[trim,3:20])#
recipients = tabulate(rowSums(email[trim,3:20]), A-1)#
timeinc = diff(sort(email$timepoints)[43:max(trim)])/3600#
indegreedist1 = matrix(NA, 500, A)#
outdegreedist1 = matrix(NA,  500, A)#
recipientsdist1 = matrix(NA,  500, A-1)#
timedist1 = matrix(NA, 500, 621)#
#setwd("/Users/bomin8319/Desktop/MulticastNetwork/Emails/PPC")#
#setwd("/Users/bomin8319/")#
setwd("/Users/bomin8319/Desktop/MulticastNetwork/Emails/PPC")#
#
for (n in 1:500) {#
	filename = paste0("Montgomery_PPCnew", n,".RData")#
	load(filename)#
	outdegreedist1[n, ] = tabulate(vapply(1:621, function(x) Montgomery_PPCnew[[x]]$a_d, c(1)), A)#
	indegreedist1[n, ] = rowSums(sapply(1:621, function(x) Montgomery_PPCnew[[x]]$r_d))#
	recipientsdist1[n, ] = tabulate(vapply(1:621, function(x) sum(Montgomery_PPCnew[[x]]$r_d), c(1)), A-1)#
	timedist1[n, ] = c(Montgomery_PPC[[1]]$t_d -email$timepoints[42], vapply(2:621, function(x) Montgomery_PPCnew[[x]]$t_d - Montgomery_PPC[[x-1]]$t_d , c(1)))/ timeunit#
}
load('~/Desktop/MulticastNetwork/code/Temporal_Email_Data.Rdata')#
Montgomery = Temporal_Email_Data$Montgomery#
email = Montgomery$email_data#
email = unique(email)#
email$timepoints =  as.numeric(as.POSIXct(strptime(email[,1], "%d %b %Y %H:%M:%S")))#
email = email[order(email$timepoints), ]#
edge = list()#
initialtime =  as.numeric(as.POSIXct(strptime("01 Mar 2012 00:00:00", "%d %b %Y %H:%M:%S")))#
for (d in 1:nrow(email)) {#
	t_d = email[d, 21] - initialtime#
	edge[[d]] = list(a_d = email[d,2], r_d = as.numeric(email[d,-c(1:2, 21)]), t_d = t_d)#
}#
A = length(Montgomery$manager_gender)#
#
#observed statistics#
timeunit = 3600#
trim = which(email$timepoints >=7*24*timeunit+email$timepoints[1])#
#
outdegree = tabulate(email[trim,2], A)#
indegree = colSums(email[trim,3:20])#
recipients = tabulate(rowSums(email[trim,3:20]), A-1)#
timeinc = diff(sort(email$timepoints)[43:max(trim)])/3600#
indegreedist1 = matrix(NA, 500, A)#
outdegreedist1 = matrix(NA,  500, A)#
recipientsdist1 = matrix(NA,  500, A-1)#
timedist1 = matrix(NA, 500, 621)#
#setwd("/Users/bomin8319/Desktop/MulticastNetwork/Emails/PPC")#
#setwd("/Users/bomin8319/")#
setwd("/Users/bomin8319/Desktop/MulticastNetwork/Emails/PPC4")#
#
for (n in 1:500) {#
	filename = paste0("Montgomery_PPCnew", n,".RData")#
	load(filename)#
	outdegreedist1[n, ] = tabulate(vapply(1:621, function(x) Montgomery_PPCnew[[x]]$a_d, c(1)), A)#
	indegreedist1[n, ] = rowSums(sapply(1:621, function(x) Montgomery_PPCnew[[x]]$r_d))#
	recipientsdist1[n, ] = tabulate(vapply(1:621, function(x) sum(Montgomery_PPCnew[[x]]$r_d), c(1)), A-1)#
	timedist1[n, ] = c(Montgomery_PPC[[1]]$t_d -email$timepoints[42], vapply(2:621, function(x) Montgomery_PPCnew[[x]]$t_d - Montgomery_PPC[[x-1]]$t_d , c(1)))/ timeunit#
}
load('~/Desktop/MulticastNetwork/code/Temporal_Email_Data.Rdata')#
Montgomery = Temporal_Email_Data$Montgomery#
email = Montgomery$email_data#
email = unique(email)#
email$timepoints =  as.numeric(as.POSIXct(strptime(email[,1], "%d %b %Y %H:%M:%S")))#
email = email[order(email$timepoints), ]#
edge = list()#
initialtime =  as.numeric(as.POSIXct(strptime("01 Mar 2012 00:00:00", "%d %b %Y %H:%M:%S")))#
for (d in 1:nrow(email)) {#
	t_d = email[d, 21] - initialtime#
	edge[[d]] = list(a_d = email[d,2], r_d = as.numeric(email[d,-c(1:2, 21)]), t_d = t_d)#
}#
A = length(Montgomery$manager_gender)#
#
#observed statistics#
timeunit = 3600#
trim = which(email$timepoints >=7*24*timeunit+email$timepoints[1])#
#
outdegree = tabulate(email[trim,2], A)#
indegree = colSums(email[trim,3:20])#
recipients = tabulate(rowSums(email[trim,3:20]), A-1)#
timeinc = diff(sort(email$timepoints)[43:max(trim)])/3600#
indegreedist1 = matrix(NA, 500, A)#
outdegreedist1 = matrix(NA,  500, A)#
recipientsdist1 = matrix(NA,  500, A-1)#
timedist1 = matrix(NA, 500, 621)#
#setwd("/Users/bomin8319/Desktop/MulticastNetwork/Emails/PPC")#
#setwd("/Users/bomin8319/")#
setwd("/Users/bomin8319/Desktop/MulticastNetwork/Emails/PPC4")#
#
for (n in 1:500) {#
	filename = paste0("Montgomery_PPCnew", n,".RData")#
	load(filename)#
	outdegreedist1[n, ] = tabulate(vapply(1:621, function(x) Montgomery_PPC[[x]]$a_d, c(1)), A)#
	indegreedist1[n, ] = rowSums(sapply(1:621, function(x) Montgomery_PPC[[x]]$r_d))#
	recipientsdist1[n, ] = tabulate(vapply(1:621, function(x) sum(Montgomery_PPC[[x]]$r_d), c(1)), A-1)#
	timedist1[n, ] = c(Montgomery_PPC[[1]]$t_d -email$timepoints[42], vapply(2:621, function(x) Montgomery_PPC[[x]]$t_d - Montgomery_PPC[[x-1]]$t_d , c(1)))/ timeunit#
}
outdegreedist = data.frame(outdegreedist)#
colnames(outdegreedist)=1:18#
library(ggplot2)#
library(reshape)#
data = melt(outdegreedist)#
colnames(data) = c("Node", "Outdegree")#
#
outdegree = data.frame(Node = 1:18, Outdegree = outdegree)#
ggplot(data = data, aes(x = Node, y = Outdegree)) +geom_boxplot() + geom_line(data = outdegree, col = 'red')
outdegreedist1 = data.frame(outdegreedist1)#
colnames(outdegreedist1)=1:18#
library(ggplot2)#
library(reshape)#
data = melt(outdegreedist1)#
colnames(data) = c("Node", "Outdegree")#
#
outdegree = data.frame(Node = 1:18, Outdegree = outdegree1)#
ggplot(data = data, aes(x = Node, y = Outdegree)) +geom_boxplot() + geom_line(data = outdegree, col = 'red')
outdegreedist1 = data.frame(outdegreedist1)#
colnames(outdegreedist1)=1:18#
library(ggplot2)#
library(reshape)#
data = melt(outdegreedist1)#
colnames(data) = c("Node", "Outdegree")#
#
outdegree = data.frame(Node = 1:18, Outdegree = outdegree)#
ggplot(data = data, aes(x = Node, y = Outdegree)) +geom_boxplot() + geom_line(data = outdegree, col = 'red')
outdegree = data.frame(Node = 1:18, Outdegree = outdegreedist1)#
ggplot(data = data, aes(x = Node, y = Outdegree)) +geom_boxplot() + geom_line(data = outdegree, col = 'red')
outdegreedist1 = data.frame(outdegreedist1)#
colnames(outdegreedist1)=1:18#
library(ggplot2)#
library(reshape)#
data = melt(outdegreedist1)#
colnames(data) = c("Node", "Outdegree")
head(data)
outdegree = data.frame(Node = 1:18, Outdegree = outdegree)#
ggplot(data = data, aes(x = Node, y = Outdegree)) +geom_boxplot() + geom_line(data = outdegree, col = 'red')
outdegree = tabulate(email[trim,2], A)#
indegree = colSums(email[trim,3:20])#
recipients = tabulate(rowSums(email[trim,3:20]), A-1)#
timeinc = diff(sort(email$timepoints)[43:max(trim)])/3600
outdegreedist1 = data.frame(outdegreedist1)#
colnames(outdegreedist1)=1:18#
library(ggplot2)#
library(reshape)#
data = melt(outdegreedist1)#
colnames(data) = c("Node", "Outdegree")#
#
outdegree = data.frame(Node = 1:18, Outdegree = outdegree)#
ggplot(data = data, aes(x = Node, y = Outdegree)) +geom_boxplot() + geom_line(data = outdegree, col = 'red')
ggplot(data = data, aes(x = Node, y = Outdegree, fill = as.factor("hi"))) +geom_boxplot() + geom_line(data = outdegree, col = 'red')
ggplot(data = data, aes(x = Node, y = Outdegree, fill = as.factor("hi"))) +geom_boxplot() + geom_line(data = outdegree, colour = "blue", size =1, linetype = "dashed")
ggplot(data = data, aes(x = Node, y = Outdegree, fill = as.factor("hi"))) +geom_boxplot() + geom_line(data = outdegree, colour = "blue", size =1)
ggplot(data = data, aes(x = Node, y = Outdegree, fill = as.factor("hi"))) +geom_boxplot() + geom_line(data = outdegree, colour = "blue", size =1)+theme(plot.title = element_blank(),text = element_text(size = rel(5.5)),legend.position="none")
ggplot(data = data, aes(x = Node, y = Outdegree, fill = as.factor("hi"))) +geom_boxplot() + geom_line(data = outdegree, colour = "blue", size =1)+theme(plot.title = element_blank(),text = element_text(size = rel(5.5)),legend.position="none")
ggplot(data = data, aes(x = Node, y = Indegree, fill = as.factor("hi"))) +geom_boxplot() + geom_line(data = indegree, colour = "blue", size =1)+theme(plot.title = element_blank(),text = element_text(size = rel(5.5)),legend.position="none")
indegree = data.frame(Node = 1:18, Indegree = indegree)#
ggplot(data = data, aes(x = Node, y = Indegree, fill = as.factor("hi"))) +geom_boxplot() + geom_line(data = indegree, colour = "blue", size =1)+theme(plot.title = element_blank(),text = element_text(size = rel(5.5)),legend.position="none")
indegreedist1 = data.frame(indegreedist1)#
colnames(indegreedist1)=1:18#
library(ggplot2)#
library(reshape)#
data = melt(indegreedist1)#
colnames(data) = c("Node", "Indegree")#
#
indegree = data.frame(Node = 1:18, Indegree = indegree)#
ggplot(data = data, aes(x = Node, y = Indegree, fill = as.factor("hi"))) +geom_boxplot() + geom_line(data = indegree, colour = "blue", size =1)+theme(plot.title = element_blank(),text = element_text(size = rel(5.5)),legend.position="none")
head(data)
head(indegree)
outdegree = tabulate(email[trim,2], A)#
indegree = colSums(email[trim,3:20])#
recipients = tabulate(rowSums(email[trim,3:20]), A-1)#
timeinc = diff(sort(email$timepoints)[43:max(trim)])/3600
indegreedist1 = data.frame(indegreedist1)#
colnames(indegreedist1)=1:18#
library(ggplot2)#
library(reshape)#
data = melt(indegreedist1)#
colnames(data) = c("Node", "Indegree")#
#
indegree = data.frame(Node = 1:18, Indegree = indegree)#
ggplot(data = data, aes(x = Node, y = Indegree, fill = as.factor("hi"))) +geom_boxplot() + geom_line(data = indegree, colour = "blue", size =1)+theme(plot.title = element_blank(),text = element_text(size = rel(5.5)),legend.position="none")
ggplot(data = data, aes(x = Node, y = Indegree, fill = as.factor("hi"))) +geom_boxplot() + geom_line(data = indegree, colour = "blue", size =0.75)+theme(plot.title = element_blank(),text = element_text(size = rel(5.5)),legend.position="none")
ggplot(data = data, aes(x = Node, y = Indegree, fill = as.factor("hi"))) +geom_boxplot() + geom_line(data = indegree, colour = "blue", size =0.5)+theme(plot.title = element_blank(),text = element_text(size = rel(5.5)),legend.position="none")
ggplot(data = data, aes(x = Node, y = Indegree, fill = as.factor("hi"))) +geom_boxplot() + geom_line(data = indegree, colour = "blue", size =0.5)+theme(plot.title = element_blank(),text = element_text(size = rel(5.5)),legend.position="none")
ggplot(data = data, aes(x = Node, y = Outdegree, fill = as.factor("hi"))) +geom_boxplot() + geom_line(data = outdegree, colour = "blue", size =0.5)+theme(plot.title = element_blank(),text = element_text(size = rel(5.5)),legend.position="none")
outdegree = tabulate(email[trim,2], A)
outdegreedist1 = data.frame(outdegreedist1)#
colnames(outdegreedist1)=1:18#
library(ggplot2)#
library(reshape)#
data = melt(outdegreedist1)#
colnames(data) = c("Node", "Outdegree")#
#
outdegree = data.frame(Node = 1:18, Outdegree = outdegree)#
ggplot(data = data, aes(x = Node, y = Outdegree, fill = as.factor("hi"))) +geom_boxplot() + geom_line(data = outdegree, colour = "blue", size =0.5)+theme(plot.title = element_blank(),text = element_text(size = rel(5.5)),legend.position="none")
recipientsdist1 = data.frame(recipientsdist1[,1:14])#
colnames(recipientsdist1)=1:14#
library(ggplot2)#
library(reshape)#
data = melt(recipientsdist1)#
colnames(data) = c("RecipientSize", "Documents")#
#
recipients = data.frame(RecipientSize = 1:14, Documents = recipients[1:14])#
ggplot(data = data, aes(x = RecipientSize, y = Documents, fill = as.factor("hi")) )+geom_boxplot() + geom_line(data = recipients, colour = "blue", size =0.5)+theme(plot.title = element_blank(),text = element_text(size = rel(5.5)),legend.position="none")
uniqueValues = quantile(c(timedist1[,-1], timeinc), seq(0, 1, length = 500))#
  qx1 = numeric(length(uniqueValues))#
  	qx2 = numeric(length(uniqueValues))#
  	for (j in 1:length(uniqueValues)) {#
  		qx1[j] = mean(c(timedist[,-1]) <= uniqueValues[j])#
  		qx2[j] = mean(c(timeinc) <= uniqueValues[j])#
}#
#
time = data.frame(Simulated = qx1, Observed = qx2)
uniqueValues = quantile(c(timedist1[,-1], timeinc), seq(0, 1, length = 500))#
  qx1 = numeric(length(uniqueValues))#
  	qx2 = numeric(length(uniqueValues))#
  	for (j in 1:length(uniqueValues)) {#
  		qx1[j] = mean(c(timedist1[,-1]) <= uniqueValues[j])#
  		qx2[j] = mean(c(timeinc) <= uniqueValues[j])#
}#
#
time = data.frame(Simulated = qx1, Observed = qx2)
ggplot(data = time, aes(x = Simulated, y = Observed)) + geom_point() + geom_abline(intercept = 0, slope = 1,colour = "blue", size =0.5)+theme(plot.title = element_blank(),text = element_text(size = rel(5.5)),legend.position="none")
head(timedist1)
indegreedist1 = matrix(NA, 500, A)#
outdegreedist1 = matrix(NA,  500, A)#
recipientsdist1 = matrix(NA,  500, A-1)#
timedist1 = matrix(NA, 500, 621)#
#setwd("/Users/bomin8319/Desktop/MulticastNetwork/Emails/PPC")#
#setwd("/Users/bomin8319/")#
setwd("/Users/bomin8319/Desktop/MulticastNetwork/Emails/PPC4")#
#
for (n in 1:500) {#
	filename = paste0("Montgomery_PPCnew", n,".RData")#
	load(filename)#
	outdegreedist1[n, ] = tabulate(vapply(1:621, function(x) Montgomery_PPC[[x]]$a_d, c(1)), A)#
	indegreedist1[n, ] = rowSums(sapply(1:621, function(x) Montgomery_PPC[[x]]$r_d))#
	recipientsdist1[n, ] = tabulate(vapply(1:621, function(x) sum(Montgomery_PPC[[x]]$r_d), c(1)), A-1)#
	timedist1[n, ] = vapply(1:621, function(x) Montgomery_PPC2[[x]]$t_d, c(1))/ timeunit#
	}
indegreedist1 = matrix(NA, 500, A)#
outdegreedist1 = matrix(NA,  500, A)#
recipientsdist1 = matrix(NA,  500, A-1)#
timedist1 = matrix(NA, 500, 621)#
#setwd("/Users/bomin8319/Desktop/MulticastNetwork/Emails/PPC")#
#setwd("/Users/bomin8319/")#
setwd("/Users/bomin8319/Desktop/MulticastNetwork/Emails/PPC4")#
#
for (n in 1:500) {#
	filename = paste0("Montgomery_PPCnew", n,".RData")#
	load(filename)#
	outdegreedist1[n, ] = tabulate(vapply(1:621, function(x) Montgomery_PPC[[x]]$a_d, c(1)), A)#
	indegreedist1[n, ] = rowSums(sapply(1:621, function(x) Montgomery_PPC[[x]]$r_d))#
	recipientsdist1[n, ] = tabulate(vapply(1:621, function(x) sum(Montgomery_PPC[[x]]$r_d), c(1)), A-1)#
	timedist1[n, ] = vapply(1:621, function(x) Montgomery_PPC[[x]]$t_d, c(1))/ timeunit#
	}
outdegree = tabulate(email[trim,2], A)#
indegree = colSums(email[trim,3:20])#
recipients = tabulate(rowSums(email[trim,3:20]), A-1)#
timeinc = diff(sort(email$timepoints)[43:max(trim)])/3600
outdegreedist1 = data.frame(outdegreedist1)#
colnames(outdegreedist1)=1:18#
library(ggplot2)#
library(reshape)#
data = melt(outdegreedist1)#
colnames(data) = c("Node", "Outdegree")#
#
outdegree = data.frame(Node = 1:18, Outdegree = outdegree)#
ggplot(data = data, aes(x = Node, y = Outdegree, fill = as.factor("hi"))) +geom_boxplot() + geom_line(data = outdegree, colour = "blue", size =0.5)+theme(plot.title = element_blank(),text = element_text(size = rel(5.5)),legend.position="none")
indegreedist1 = data.frame(indegreedist1)#
colnames(indegreedist1)=1:18#
library(ggplot2)#
library(reshape)#
data = melt(indegreedist1)#
colnames(data) = c("Node", "Indegree")#
#
indegree = data.frame(Node = 1:18, Indegree = indegree)#
ggplot(data = data, aes(x = Node, y = Indegree, fill = as.factor("hi"))) +geom_boxplot() + geom_line(data = indegree, colour = "blue", size =0.5)+theme(plot.title = element_blank(),text = element_text(size = rel(5.5)),legend.position="none")
recipientsdist1 = data.frame(recipientsdist1[,1:14])#
colnames(recipientsdist1)=1:14#
library(ggplot2)#
library(reshape)#
data = melt(recipientsdist1)#
colnames(data) = c("RecipientSize", "Documents")#
#
recipients = data.frame(RecipientSize = 1:14, Documents = recipients[1:14])#
ggplot(data = data, aes(x = RecipientSize, y = Documents, fill = as.factor("hi")) )+geom_boxplot() + geom_line(data = recipients, colour = "blue", size =0.5)+theme(plot.title = element_blank(),text = element_text(size = rel(5.5)),legend.position="none")
#######
uniqueValues = quantile(c(timedist1[,-1], timeinc), seq(0, 1, length = 500))#
  qx1 = numeric(length(uniqueValues))#
  	qx2 = numeric(length(uniqueValues))#
  	for (j in 1:length(uniqueValues)) {#
  		qx1[j] = mean(c(timedist1[,-1]) <= uniqueValues[j])#
  		qx2[j] = mean(c(timeinc) <= uniqueValues[j])#
}#
#
time = data.frame(Simulated = qx1, Observed = qx2)#
ggplot(data = time, aes(x = Simulated, y = Observed)) + geom_point() + geom_abline(intercept = 0, slope = 1,colour = "blue", size =0.5)+theme(plot.title = element_blank(),text = element_text(size = rel(5.5)),legend.position="none")
